{"ast":null,"code":"import _defineProperty from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cdi_5/agri_thesis_front/src/components/Header.js\";\nimport React, { Component } from 'react';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport { Row, Col, Navbar, Nav, Dropdown, DropdownToggle, DropdownMenu, Input, Button } from 'reactstrap';\nimport * as API from '../services/API';\nimport Loader from './Loader';\nimport Login from './Login';\nimport { TOAST } from '../helpers/helpers';\nimport ConfirmModal from '../modals/ConfirmModal';\nimport * as Session from '../services/session';\nimport { FaCaretLeft, FaCaretDown } from 'react-icons/fa/';\nimport moment from 'moment';\nimport logo from './Bio-N.ico';\n\nvar qs = require('query-string');\n\nvar month = new Array();\nmonth[0] = \"January\";\nmonth[1] = \"February\";\nmonth[2] = \"March\";\nmonth[3] = \"April\";\nmonth[4] = \"May\";\nmonth[5] = \"June\";\nmonth[6] = \"July\";\nmonth[7] = \"August\";\nmonth[8] = \"September\";\nmonth[9] = \"October\";\nmonth[10] = \"November\";\nmonth[11] = \"December\";\n\nvar Header =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Header, _Component);\n\n  function Header() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Header)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.urlSearch = qs.parse(_this.props.history.location.search);\n    _this.state = {\n      titleHeader: 'Home',\n      query: _this.urlSearch.search || '',\n      password: '',\n      confirm_pass: '',\n      dropdownOpen: false,\n      pageState: {\n        page: parseInt(_this.urlSearch.page || 0) > 0 ? parseInt(_this.urlSearch.page || 0) - 1 : 0,\n        limit: parseInt(_this.urlSearch.limit || 10),\n        search: _this.urlSearch.search || '',\n        status: _this.urlSearch.status || 'active',\n        sort_id: _this.urlSearch.sort_id || 'code',\n        sort_desc: _this.urlSearch.sort_desc,\n        filter: {\n          code: _this.urlSearch.code,\n          name: _this.urlSearch.name,\n          description: _this.urlSearch.description\n        }\n      }\n    };\n    _this.prevColumn = _this.state.columns || {};\n\n    _this.selectActionToggled = function (item) {\n      _this.setState({\n        itemData: item\n      });\n    };\n\n    _this.changeKeyValue = function (key, value) {\n      _this.setState(function (oldState) {\n        return _defineProperty({}, key, value || !oldState[key]);\n      });\n    };\n\n    _this.toggleLoading = function (flag) {\n      _this.setState(function (oldState) {\n        return {\n          searchLoading: flag\n        };\n      });\n    };\n\n    _this.toggleButton = function (path) {\n      _this.props.history.push(path);\n    };\n\n    _this.changePassword = function () {\n      var _Session$getUser = Session.getUser(),\n          id = _Session$getUser.id;\n\n      var body = {\n        password: _this.state.password,\n        confirm_password: _this.state.confirm_pass\n      };\n\n      _this.setState({\n        isConfirmClick: true\n      });\n\n      API.changePassword(body, id).then(function (response) {\n        _this.setState({\n          password: '',\n          confirm_pass: '',\n          isChangePassModalOpen: false\n        });\n      }, function (err) {\n        TOAST.pop({\n          message: err.message,\n          type: 'error'\n        });\n      }).finally(function () {\n        _this.setState({\n          isConfirmClick: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          dropdownOpen: !prevState.dropdownOpen\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var st = this.state;\n      var user = Session.getUser();\n      var has_token = this.state.has_token || Session.getToken() || user;\n      var date = new Date();\n      var year = date.getFullYear();\n      var month = date.getMonth();\n      var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n      var reportStartQuery = moment(date.getMonth());\n      console.log(month, year); // console.log(reportStartQuery)\n\n      return React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          background: '#049372',\n          margin: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: \"headerNav\",\n        exact: true,\n        to: \"/\",\n        activeStyle: {\n          textDecoration: 'underline'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        style: {\n          height: '24px',\n          width: '24px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), \"BIO-N\"), React.createElement(NavLink, {\n        className: \"headerNav\",\n        to: \"/about\",\n        activeStyle: {\n          textDecoration: 'underline'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"About\"), React.createElement(NavLink, {\n        className: \"headerNav\",\n        to: \"/products\",\n        activeStyle: {\n          textDecoration: 'underline'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Products\"), has_token && React.createElement(NavLink, {\n        className: \"headerNav\",\n        to: \"/users\",\n        activeStyle: {\n          textDecoration: 'underline'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Users\"), has_token && React.createElement(NavLink, {\n        className: \"headerNav\",\n        to: \"/orders\",\n        activeStyle: {\n          textDecoration: 'underline'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Orders\"), has_token && React.createElement(NavLink, {\n        className: \"headerNav\",\n        to: \"/report/annual?start_date=\".concat(year, \"-\").concat(month, \"-01&end_date=\").concat(year, \"-\").concat(month, \"-\").concat(lastDay),\n        activeStyle: {\n          textDecoration: 'underline'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Reports\"), React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: function toggle() {\n          return _this2.toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        style: {\n          padding: '1px 6px',\n          background: 'transparent',\n          border: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, has_token ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, user.username, \" \", !this.state.dropdownOpen ? React.createElement(FaCaretDown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }) : React.createElement(FaCaretLeft, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })) : 'Login'), React.createElement(DropdownMenu, {\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Login, {\n        that: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }))))))), React.createElement(ConfirmModal, {\n        size: \"sm\",\n        takeAction: function takeAction(e) {\n          return _this2.changePassword();\n        },\n        isOpen: st.isChangePassModalOpen || false,\n        disableConfirmButton: st.password.length < 6 || st.confirm_pass.length < 6 || st.password !== st.confirm_pass,\n        isConfirmClick: st.isConfirmClick,\n        modalTitle: 'Change Password',\n        disabledConfirmFocus: true,\n        modalBody: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          align: \"center\",\n          className: \"margin-bottom-md\",\n          style: {\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"password\",\n          className: \"form-control-sm-font-size mtop-sm-10\",\n          value: st.password || '',\n          placeholder: \"Password\",\n          onChange: function onChange(e) {\n            _this2.setState({\n              password: e.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          align: \"center\",\n          className: \"margin-bottom-md\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(Input, {\n          id: \"receiver\",\n          placeholder: \"Confirm password\",\n          type: \"password\",\n          className: \"form-control-sm-font-size\",\n          onChange: function onChange(e) {\n            return _this2.setState({\n              confirm_pass: e.target.value\n            });\n          },\n          value: st.confirm_pass || '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }))),\n        toggle: function toggle() {\n          _this2.changeKeyValue(\"isChangePassModalOpen\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(Loader, {\n        message: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, \"Loading...\")),\n        isLoading: st.isLoading || false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Header;\n}(Component);\n\nexport default withRouter(Header);","map":{"version":3,"sources":["/home/cdi_5/agri_thesis_front/src/components/Header.js"],"names":["React","Component","withRouter","NavLink","Row","Col","Navbar","Nav","Dropdown","DropdownToggle","DropdownMenu","Input","Button","API","Loader","Login","TOAST","ConfirmModal","Session","FaCaretLeft","FaCaretDown","moment","logo","qs","require","month","Array","Header","urlSearch","parse","props","history","location","search","state","titleHeader","query","password","confirm_pass","dropdownOpen","pageState","page","parseInt","limit","status","sort_id","sort_desc","filter","code","name","description","prevColumn","columns","selectActionToggled","item","setState","itemData","changeKeyValue","key","value","oldState","toggleLoading","flag","searchLoading","toggleButton","path","push","changePassword","getUser","id","body","confirm_password","isConfirmClick","then","response","isChangePassModalOpen","err","pop","message","type","finally","prevState","st","user","has_token","getToken","date","Date","year","getFullYear","getMonth","lastDay","reportStartQuery","console","log","background","margin","textDecoration","height","width","toggle","padding","border","username","e","length","marginBottom","target","isLoading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { withRouter, NavLink, } from 'react-router-dom' \r\nimport { Row, Col, Navbar, Nav, Dropdown, DropdownToggle, DropdownMenu, Input, Button} from 'reactstrap'\r\nimport * as API from '../services/API'\r\n\r\nimport Loader from './Loader'\r\nimport Login from './Login'\r\n\r\nimport { TOAST } from '../helpers/helpers';\r\n\r\nimport ConfirmModal from '../modals/ConfirmModal'\r\nimport * as Session from '../services/session'\r\nimport {FaCaretLeft, FaCaretDown } from 'react-icons/fa/'\r\n\r\nimport moment from 'moment';\r\n\r\nimport logo from './Bio-N.ico'\r\n\r\nconst qs = require('query-string');\r\nvar month = new Array();\r\nmonth[0] = \"January\";\r\nmonth[1] = \"February\";\r\nmonth[2] = \"March\";\r\nmonth[3] = \"April\";\r\nmonth[4] = \"May\";\r\nmonth[5] = \"June\";\r\nmonth[6] = \"July\";\r\nmonth[7] = \"August\";\r\nmonth[8] = \"September\";\r\nmonth[9] = \"October\";\r\nmonth[10] = \"November\";\r\nmonth[11] = \"December\";\r\nclass Header extends Component {\r\n    urlSearch = qs.parse(this.props.history.location.search)\r\n    state = {\r\n        titleHeader: 'Home',\r\n        query: this.urlSearch.search || '',\r\n        password: '',\r\n        confirm_pass: '',\r\n        dropdownOpen: false,\r\n        pageState: {\r\n            page: (parseInt(this.urlSearch.page || 0) > 0 ? (parseInt(this.urlSearch.page || 0) - 1 ) : 0),\r\n            limit: parseInt(this.urlSearch.limit || 10),\r\n            search: this.urlSearch.search || '',\r\n            status: this.urlSearch.status || 'active',\r\n            sort_id: this.urlSearch.sort_id || 'code',\r\n            sort_desc: this.urlSearch.sort_desc,\r\n            filter: {\r\n                code: this.urlSearch.code,\r\n                name: this.urlSearch.name,\r\n                description: this.urlSearch.description\r\n            }\r\n        }\r\n    }\r\n\r\n    prevColumn = this.state.columns || {}\r\n\r\n    selectActionToggled = (item) => {\r\n        this.setState({\r\n            itemData: item\r\n        })\r\n    }\r\n\r\n    changeKeyValue = (key, value) => {\r\n        this.setState((oldState)=>({\r\n            [key]: value || !oldState[key]\r\n        }))\r\n    }\r\n\r\n    toggleLoading = (flag) => {\r\n        this.setState(oldState => ({searchLoading: flag}))\r\n    }\r\n    toggleButton = (path) => {\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    toggle() {\r\n        this.setState(prevState => ({\r\n            dropdownOpen: !prevState.dropdownOpen\r\n        }));\r\n    }\r\n\r\n    changePassword = () => {\r\n        const {id} = Session.getUser()\r\n        const body = {\r\n            password: this.state.password,\r\n            confirm_password: this.state.confirm_pass\r\n        }\r\n        this.setState({isConfirmClick: true})\r\n        API.changePassword(body,id)\r\n        .then((response)=> {\r\n            this.setState({password: '', confirm_pass: '', isChangePassModalOpen: false})\r\n        },err =>{\r\n            TOAST.pop({message: err.message, type: 'error'})\r\n        }).finally(()=> {\r\n            this.setState({isConfirmClick: false})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const st=this.state;\r\n        const user = Session.getUser()\r\n        const has_token = this.state.has_token || Session.getToken() || user\r\n        const date = new Date()\r\n        const year = date.getFullYear()\r\n        const month = date.getMonth()\r\n        const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n        const reportStartQuery = moment(date.getMonth())\r\n        console.log(month, year)\r\n        // console.log(reportStartQuery)\r\n        return(\r\n            <div className=\"header\"> \r\n                <Row style={{background: '#049372', margin: 'auto'}}>\r\n                    <Col>\r\n                        <Navbar>\r\n                            <NavLink className=\"headerNav\" exact to=\"/\" activeStyle={{textDecoration: 'underline'}}><img src={logo} alt=\"logo\" style={{height: '24px', width: '24px'}}></img>BIO-N</NavLink>\r\n                            {/* <NavLink className=\"headerNav\" to=\"/home\" activeStyle={{textDecoration: 'underline'}}>Home</NavLink> */}\r\n                            <NavLink className=\"headerNav\" to=\"/about\" activeStyle={{textDecoration: 'underline'}}>About</NavLink> \r\n                            <NavLink className=\"headerNav\" to=\"/products\" activeStyle={{textDecoration: 'underline'}}>Products</NavLink>  \r\n                            {has_token && <NavLink className=\"headerNav\" to=\"/users\" activeStyle={{textDecoration: 'underline'}}>Users</NavLink> }\r\n                            {has_token && <NavLink className=\"headerNav\" to=\"/orders\" activeStyle={{textDecoration: 'underline'}}>Orders</NavLink> }\r\n                            {has_token && <NavLink className=\"headerNav\" to={`/report/annual?start_date=${year}-${month}-01&end_date=${year}-${month}-${lastDay}`} activeStyle={{textDecoration: 'underline'}}>Reports</NavLink> }\r\n                                <Nav className=\"ml-auto\" navbar>\r\n                                        <Dropdown isOpen={this.state.dropdownOpen} toggle={()=>this.toggle()}>\r\n                                            <DropdownToggle style={{padding: '1px 6px', background: 'transparent', border: 'none'}}>\r\n                                                {has_token ? <div>{user.username} {!this.state.dropdownOpen ? <FaCaretDown/> : <FaCaretLeft/>}</div> : 'Login'}\r\n                                            </DropdownToggle>\r\n                                            <DropdownMenu right>\r\n                                                <Login that={this}/>\r\n                                            </DropdownMenu>\r\n                                        </Dropdown>\r\n                                </Nav>\r\n                        </Navbar>\r\n                    </Col>\r\n                </Row>\r\n                <ConfirmModal\r\n                    size=\"sm\"\r\n                    takeAction={(e)=> this.changePassword()}\r\n                    isOpen={st.isChangePassModalOpen || false}\r\n                    disableConfirmButton={st.password.length<6 || st.confirm_pass.length<6 || st.password !== st.confirm_pass}\r\n                    isConfirmClick={st.isConfirmClick}\r\n                    modalTitle={'Change Password'}\r\n                    disabledConfirmFocus={true}\r\n                    modalBody={  \r\n                        <div>\r\n                            <div align=\"center\" className=\"margin-bottom-md\" style={{marginBottom: '5px'}} >\r\n                                <Input type=\"password\" className=\"form-control-sm-font-size mtop-sm-10\" value={st.password||''} \r\n                                    placeholder=\"Password\"\r\n                                    onChange={(e)=>{\r\n                                        this.setState({password: e.target.value})\r\n                                    }}>\r\n                                </Input>\r\n                            </div>\r\n                            <div align=\"center\" className=\"margin-bottom-md\" >\r\n                                <Input id=\"receiver\" placeholder=\"Confirm password\" type=\"password\" className=\"form-control-sm-font-size\" \r\n                                onChange={(e) =>this.setState({confirm_pass: e.target.value})}\r\n                                value={st.confirm_pass||''} />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    toggle={\r\n                        () => {\r\n                            this.changeKeyValue(\"isChangePassModalOpen\")\r\n                        }\r\n                    }\r\n                />\r\n                <Loader\r\n                    message={(\r\n                        <div>\r\n                            {/* <h4>Fetching reports</h4> */}\r\n                            <p>Loading...</p>\r\n                        </div>\r\n                    )}\r\n                    isLoading={st.isLoading || false}\r\n                />\r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/cdi_5/agri_thesis_front/src/components/Orders.js\";\nimport React, { Component } from 'react';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport { Row, Col, Button, Input } from 'reactstrap';\nimport ReactTable from 'react-table';\nimport * as API from '../services/API';\nimport * as Session from '../services/session';\nimport { Helpers, lS, DefaultState, TOAST, OPTIONS, gDp, DATE_FORMAT } from '../helpers/helpers';\nimport SearchBar from './SearchBar.js';\nimport ConfirmModal from '../modals/ConfirmModal';\nimport { FaTrashAlt, FaEdit } from 'react-icons/fa/';\nimport Loader from './Loader';\n\nvar qs = require('query-string'); // React table ref: https://react-table.js.org/#/story/readme\n\n\nvar Products =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Products, _Component);\n\n  function Products() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Products);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Products)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.urlSearch = qs.parse(_this.props.history.location.search);\n    _this.state = {\n      data: [],\n      query: _this.urlSearch.search || '',\n      confirmUser: {\n        username: ''\n      },\n      pageState: {\n        page: parseInt(_this.urlSearch.page || 0) > 0 ? parseInt(_this.urlSearch.page || 0) - 1 : 0,\n        limit: parseInt(_this.urlSearch.limit || 10),\n        sort_id: _this.urlSearch.sort_id || 'created',\n        sort_desc: _this.urlSearch.sort_desc || 'desc',\n        search: _this.urlSearch.search || ''\n      },\n      columns: [{\n        Header: \"Name\",\n        headerClassName: 'text-left',\n        accessor: \"last_name\",\n        Cell: function Cell(row) {\n          return Helpers.handleDisplay((row.original.last_name ? row.original.last_name + ', ' : '') + row.original.first_name || '');\n        }\n      }, {\n        Header: \"Date\",\n        headerClassName: 'text-left',\n        sortable: false,\n        accessor: \"created\",\n        Cell: function Cell(row) {\n          return Helpers.handleDate(row.value, DATE_FORMAT);\n        }\n      }, {\n        Header: \"Role\",\n        headerClassName: 'text-left',\n        accessor: \"role\",\n        Cell: function Cell(row) {\n          return Helpers.handleDisplay(row.value);\n        }\n      }]\n    };\n    _this.prevColumn = _this.state.columns || {};\n\n    _this.selectActionToggled = function (item) {\n      _this.setState({\n        itemData: item\n      });\n    };\n\n    _this.responseGetItems = function (response) {\n      var st = _this.state;\n      response = response || {\n        data: []\n      };\n      response.data = response.data || [];\n      var configState = {\n        data: response.data,\n        total: response.count,\n        totalPage: Math.ceil((response.count || 0) / st.pageState.limit) // configState.totalPage = Math.ceil(configState.data.length / st.pageState.limit) \n\n      };\n\n      _this.setState(configState);\n    };\n\n    _this.fetchData = function () {\n      // document.getElementsByClassName('rt-tbody')[0].scrollTop = 0;\n      var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n      var st = _this.state;\n\n      _this.toggleLoading(true);\n\n      var params = {\n        // page: (st.pageState.page+1),\n        // limit: st.pageState.limit,\n        search: st.pageState.search,\n        sort_id: st.pageState.sort_id || '',\n        sort_desc: !st.pageState.sort_id ? '' : (st.pageState.sort_desc || '').toString() === 'true' ? 'desc' : 'asc'\n      };\n      API.getOrders({\n        params: params\n      }).then(function (response) {\n        _this.responseGetItems(response);\n      }, function (err) {\n        _this.setState({\n          data: []\n        });\n\n        TOAST.pop({\n          message: err.message,\n          type: 'error'\n        });\n      }).finally(function () {\n        _this.setState({\n          searchLoading: false,\n          apiParams: params\n        });\n      });\n    };\n\n    _this.handleSearch = function (e) {\n      var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n      var st = _this.state;\n      e.preventDefault();\n      Helpers.handlePage(that, {\n        page: 0,\n        limit: st.pageState.limit,\n        search: st.query,\n        sort_id: st.pageState.sort_id,\n        sort_desc: !!st.pageState.sort_desc\n      });\n    };\n\n    _this.toggleLoading = function (flag) {\n      _this.setState(function (oldState) {\n        return {\n          searchLoading: flag\n        };\n      });\n    };\n\n    _this.toggleButton = function (path) {\n      _this.props.history.push(path);\n    };\n\n    _this.componentDidMount = function () {\n      Helpers.callBackMessageToastPop();\n\n      _this.setState({\n        searchLoading: true,\n        mounted: true,\n        checkData: [],\n        data: []\n      }, function () {\n        _this.fetchData();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Products, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      var _this2 = this;\n\n      var st = this.state;\n      var filters_array = Helpers.objectToArray(st.pageState.filter, true) || [];\n      this.setState({\n        showAdvancedSearch: filters_array.length > 0\n      });\n\n      if (typeof st.mounted !== 'undefined') {\n        var pageQs = qs.parse(this.props.history.location.search);\n        this.setState({\n          pageState: {\n            page: parseInt(pageQs.page || 0) > 0 ? parseInt(pageQs.page || 0) - 1 : 0,\n            limit: parseInt(pageQs.limit || 10),\n            search: st.query,\n            sort_id: pageQs.sort_id || st.pageState.sort_id,\n            sort_desc: !!pageQs.sort_desc\n          }\n        }, function () {\n          _this2.fetchData();\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState({\n        checkData: [],\n        data: []\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var that = this;\n      var st = this.state;\n      var original = st.selected || {}; // st.data = st.data.map(d=> ({ ...d, check: st.checkData.filter(cData=>d.id===cData.id).length > 0 }))\n      // st.columns = [\n      //     ...this.prevColumn,\n      // ]\n\n      var messages = st.data.map(function (message) {\n        return React.createElement(\"div\", {\n          key: message.id,\n          style: {\n            marginBottom: '10px',\n            borderBottom: '1px solid rgb(150,150,150,0.5)',\n            cursor: 'pointer'\n          },\n          onClick: function onClick() {\n            return _this3.props.history.push(\"order/\".concat(message.id));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            marginBottom: '2px',\n            fontSize: '18px',\n            fontWeight: '700'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, message.is_read ? '' : React.createElement(\"span\", {\n          style: {\n            fontWeight: '400',\n            fontSize: '14px',\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, \"*\"), \" \", message.first_name, \" \", message.last_name), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, message.message));\n      });\n      return React.createElement(\"div\", {\n        style: {\n          margin: '0 5% 15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pad-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"margin-bottom-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Filter:\", React.createElement(Input, {\n        type: \"select\",\n        name: \"filter\",\n        value: this.state.filter,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            filter: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"All\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Unread\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Read\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Complete\")), messages)), React.createElement(ConfirmModal, {\n        size: \"sm\",\n        takeAction: function takeAction() {\n          return _this3.deleteUser(st.confirmUser);\n        },\n        isOpen: st.isItemModalOpen,\n        isConfirmClick: st.isConfirmClick,\n        error: st.errorDelete,\n        itemData: original,\n        modalTitle: 'Delete User',\n        modalBody: React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, \"Are you sure you want to delete user \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, st.confirmUser.username), \" ?\"),\n        onDeleteItem: this.fetchData,\n        toggle: function toggle() {\n          _this3.changeKeyValue(\"isItemModalOpen\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      })), React.createElement(Loader, {\n        message: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, \"Loading...\")),\n        isLoading: st.isLoading || false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Products;\n}(Component);\n\nexport default withRouter(Products);","map":{"version":3,"sources":["/home/cdi_5/agri_thesis_front/src/components/Orders.js"],"names":["React","Component","withRouter","NavLink","Row","Col","Button","Input","ReactTable","API","Session","Helpers","lS","DefaultState","TOAST","OPTIONS","gDp","DATE_FORMAT","SearchBar","ConfirmModal","FaTrashAlt","FaEdit","Loader","qs","require","Products","urlSearch","parse","props","history","location","search","state","data","query","confirmUser","username","pageState","page","parseInt","limit","sort_id","sort_desc","columns","Header","headerClassName","accessor","Cell","row","handleDisplay","original","last_name","first_name","sortable","handleDate","value","prevColumn","selectActionToggled","item","setState","itemData","responseGetItems","response","st","configState","total","count","totalPage","Math","ceil","fetchData","that","toggleLoading","params","toString","getOrders","then","err","pop","message","type","finally","searchLoading","apiParams","handleSearch","e","preventDefault","handlePage","flag","oldState","toggleButton","path","push","componentDidMount","callBackMessageToastPop","mounted","checkData","newProps","filters_array","objectToArray","filter","showAdvancedSearch","length","pageQs","selected","messages","map","id","marginBottom","borderBottom","cursor","fontSize","fontWeight","is_read","color","margin","target","deleteUser","isItemModalOpen","isConfirmClick","errorDelete","changeKeyValue","isLoading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter, NavLink } from 'react-router-dom' \nimport { Row, Col, Button, Input } from 'reactstrap'\nimport ReactTable from 'react-table'\n\nimport * as API from '../services/API'\nimport * as Session from '../services/session'\n\nimport { Helpers, lS, DefaultState, TOAST, OPTIONS, gDp, DATE_FORMAT  } from '../helpers/helpers'\n\nimport SearchBar from './SearchBar.js'\nimport ConfirmModal from '../modals/ConfirmModal'\n\nimport {FaTrashAlt, FaEdit} from 'react-icons/fa/'\nimport Loader from './Loader'\n\nconst qs = require('query-string');\n\n// React table ref: https://react-table.js.org/#/story/readme\n\nclass Products extends Component {\n    urlSearch = qs.parse(this.props.history.location.search)\n    state = {\n        data: [],\n        query: this.urlSearch.search || '',\n        confirmUser: {username: ''},\n        pageState: {\n            page: (parseInt(this.urlSearch.page || 0) > 0 ? (parseInt(this.urlSearch.page || 0) - 1 ) : 0),\n            limit: parseInt(this.urlSearch.limit || 10),\n            sort_id: this.urlSearch.sort_id || 'created',\n            sort_desc: this.urlSearch.sort_desc || 'desc',\n            search: this.urlSearch.search || '',\n        },\n        columns: [\n            {\n                Header: \"Name\",\n                headerClassName: 'text-left',\n                accessor: \"last_name\",\n                Cell: row=> Helpers.handleDisplay(((row.original.last_name) ? (row.original.last_name+', ') : '') + row.original.first_name || '')\n            },\n            {\n                Header: \"Date\",\n                headerClassName: 'text-left',\n                sortable: false,\n                accessor: \"created\",\n                Cell: row=> Helpers.handleDate(row.value, DATE_FORMAT)\n            },\n            {\n                Header: \"Role\",\n                headerClassName: 'text-left',\n                accessor: \"role\",\n                Cell: row=> Helpers.handleDisplay(row.value)\n            },\n        ],\n    }\n\n    prevColumn = this.state.columns || {}\n\n    selectActionToggled = (item) => {\n        this.setState({\n            itemData: item\n        })\n    }\n\n    responseGetItems = (response) => { \n        const st = this.state\n        response = response || {data:[]}\n        response.data = response.data || []\n        let configState = {\n            data: response.data,\n            total: response.count,\n            totalPage: Math.ceil( (response.count || 0) / st.pageState.limit) \n        }\n        // configState.totalPage = Math.ceil(configState.data.length / st.pageState.limit) \n        this.setState(configState)\n    }\n\n    fetchData = () => {\n\n        // document.getElementsByClassName('rt-tbody')[0].scrollTop = 0;\n        const that = this;\n        const st = this.state\n        this.toggleLoading(true)\n        const params = { \n            // page: (st.pageState.page+1),\n            // limit: st.pageState.limit,\n            search: st.pageState.search,\n            sort_id: st.pageState.sort_id || '',\n            sort_desc: (!st.pageState.sort_id) ? '' :\n                       (st.pageState.sort_desc || '').toString() === 'true' ? 'desc' : 'asc',\n        }\n\n        API.getOrders({params})\n            .then(response => { \n                this.responseGetItems(response) \n            }, err=> {\n                this.setState({data:[]});\n                TOAST.pop({message: err.message, type: 'error'})\n            }).finally(()=>{\n                this.setState({ searchLoading: false, apiParams: params })\n            })\n    }\n\n    handleSearch = (e) => {\n        const that = this;\n        const st = this.state\n        e.preventDefault()\n        Helpers.handlePage(that, {page: 0, limit: st.pageState.limit, search: st.query, sort_id: st.pageState.sort_id, sort_desc: !!st.pageState.sort_desc })\n    }\n\n    toggleLoading = (flag) => {\n        this.setState(oldState => ({searchLoading: flag}))\n    }\n    toggleButton = (path) => {\n        this.props.history.push(path)\n    }\n\n    componentDidMount = () => {\n        Helpers.callBackMessageToastPop() \n        this.setState({searchLoading: true, mounted: true, checkData:[], data:[]},()=>{\n            this.fetchData()\n        })\n    }\n\n    componentWillReceiveProps(newProps) {\n        const st = this.state\n        const filters_array = Helpers.objectToArray(st.pageState.filter, true) || []\n        this.setState({showAdvancedSearch: filters_array.length > 0 })\n        if ( typeof st.mounted !== 'undefined') {\n            let pageQs = qs.parse(this.props.history.location.search)\n            this.setState({\n                pageState: {\n                    page: parseInt(pageQs.page || 0) > 0 ? ( parseInt(pageQs.page || 0) - 1): 0,\n                    limit: parseInt(pageQs.limit || 10),\n                    search: st.query,\n                    sort_id: pageQs.sort_id || st.pageState.sort_id,\n                    sort_desc: !!pageQs.sort_desc,\n                } \n            },()=>{\n                this.fetchData();\n            })\n        }\n    } \n\n    componentWillUnmount() {\n        this.setState({checkData: [], data: [] })\n    }\n\n    render() {\n        const that = this\n        const st=this.state;\n        const original = st.selected || {}\n        // st.data = st.data.map(d=> ({ ...d, check: st.checkData.filter(cData=>d.id===cData.id).length > 0 }))\n        // st.columns = [\n        //     ...this.prevColumn,\n        // ]\n        const messages = st.data.map((message)=> \n            <div key={message.id} style={{marginBottom: '10px', borderBottom: '1px solid rgb(150,150,150,0.5)', cursor: 'pointer'}} onClick={()=>this.props.history.push(`order/${message.id}`)}>\n                <div style={{marginBottom: '2px', fontSize: '18px', fontWeight: '700'}}>{message.is_read ? '' : <span style={{fontWeight: '400', fontSize: '14px', color: 'red'}}>*</span>} {message.first_name} {message.last_name}</div>\n                <div>{message.message}</div>\n            </div>)\n        return (\n            <div style={{margin: '0 5% 15px'}}> \n                <div className=\"pad-md\">\n                    <Row>\n                        <Col className=\"margin-bottom-md\">\n                            Filter: \n                            <Input type=\"select\" name=\"filter\" value={this.state.filter} onChange={(e)=>this.setState({filter: e.target.value})}>\n                                <option>All</option>\n                                <option>Unread</option>\n                                <option>Read</option>\n                                <option>Complete</option>\n                            </Input>\n                            {/* <Row>\n                                <Col md=\"3\" className=\"margin-bottom-sm\"  style={{marginBottom: '10px'}}>\n                                    <SearchBar\n                                        query={st.query}\n                                        placeholder={'Search Order'}\n                                        loading={st.searchLoading}\n                                        didSearch={this.handleSearch}\n                                        onChangeQuery={(e) => {this.setState({query: e.target.value})}}\n                                    />  \n                                </Col>\n                            </Row> */}\n                            {messages}\n                            {/* <Row>\n                                <Col>\n                                    <div className=\"text-left text-lg-right text-md-right\">\n                                        <strong>Total: </strong>\n                                        { st.searchLoading ? '...' : (st.total || 0)} \n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"user\">\n                                    <ReactTable\n                                        {...{\n                                            ...Helpers.reactTableDefault({st, that: that}),\n                                        }}\n                                    />\n                                </Col>\n                            </Row> */}\n                        </Col>\n                    </Row>\n                    <ConfirmModal\n                        size=\"sm\"\n                        takeAction={()=>this.deleteUser(st.confirmUser)}\n                        isOpen={st.isItemModalOpen}\n                        isConfirmClick={st.isConfirmClick}\n                        error={st.errorDelete}\n                        itemData={original}\n                        modalTitle={'Delete User'}\n                        modalBody={ \n                            <p>Are you sure you want to delete user <strong>{st.confirmUser.username}</strong> ?</p>\n                        }\n                        onDeleteItem={this.fetchData}\n                        toggle={\n                            () => {\n                                this.changeKeyValue(\"isItemModalOpen\")\n                            }\n                        }\n                    />\n                </div>\n                <Loader\n                    message={(\n                        <div>\n                            {/* <h4>Fetching reports</h4> */}\n                            <p>Loading...</p>\n                        </div>\n                    )}\n                    isLoading={st.isLoading || false}\n                />\n            </div>\n        ) ;\n    }\n}\n\nexport default withRouter(Products);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as Session from '../services/session';\nvar api = \"http://52.74.76.145:8084/v1\";\n\nvar qs = require('query-string');\n\nvar token = Session.getToken();\nvar headers = {\n  'Accept': 'application/json',\n  'Authorization': token,\n  'Content-Type': 'application/json' // LOGIN\n\n};\nexport var login = function login(body) {\n  var config = {};\n  config.method = 'POST';\n  config.route = \"/users/login\";\n  config.body = body;\n  return queryService(config); // fetch(`${api}/users/login`, {\n  //   method: 'POST',\n  //   headers,\n  //   body: JSON.stringify({\n  //     username:body.username,\n  //     password:body.password})\n  // }).then(res => res.json(),err => console.log(err))\n};\nexport var logout = function logout() {\n  var config = {};\n  config.method = 'POST';\n  config.route = \"/users/logout\";\n  return queryService(config);\n}; // USERS\n\nexport var getUsers = function getUsers(_ref) {\n  var _ref$params = _ref.params,\n      params = _ref$params === void 0 ? {} : _ref$params;\n  var config = {};\n  config.method = 'GET';\n  config.route = \"/users\";\n  config.params = params;\n  return queryService(config);\n};\nexport var getUser = function getUser(id) {\n  var config = {};\n  config.method = 'GET';\n  config.route = \"/users/\" + id;\n  return queryService(config);\n};\nexport var createUser = function createUser(body) {\n  var config = {};\n  config.method = 'POST';\n  config.route = \"/users\";\n  config.body = body;\n  return queryService(config);\n};\nexport var updateUser = function updateUser(body, uId, _ref2) {\n  var _ref2$params = _ref2.params,\n      params = _ref2$params === void 0 ? {} : _ref2$params;\n  var config = {};\n  config.method = 'PUT';\n  config.route = \"/users/\".concat(uId);\n  config.params = params;\n  config.body = body;\n  return queryService(config);\n};\nexport var changePassword = function changePassword(body, uId) {\n  var config = {};\n  config.method = 'PUT';\n  config.route = \"/update-password/\".concat(uId);\n  config.body = body;\n  return queryService(config);\n};\nexport var deleteUser = function deleteUser(_ref3) {\n  var id = _ref3.id;\n  var config = {};\n  config.method = 'PUT';\n  config.route = \"/delete-user/\".concat(id);\n  return queryService(config);\n}; // ROLES\n\nexport var getRoles = function getRoles() {\n  var config = {};\n  config.method = 'GET';\n  config.route = \"/roles\";\n  return queryService(config);\n};\nexport var createRole = function createRole(body) {\n  var config = {};\n  config.method = 'POST';\n  config.route = \"/roles\";\n  config.body = body;\n  return queryService(config);\n}; // PRODUCTS\n\nexport var getProducts = function getProducts(_ref4) {\n  var _ref4$params = _ref4.params,\n      params = _ref4$params === void 0 ? {} : _ref4$params;\n  var config = {};\n  config.method = 'GET';\n  config.route = \"/products\";\n  config.params = params;\n  return queryService(config);\n};\nexport var getProduct = function getProduct(id) {\n  var config = {};\n  config.method = 'GET';\n  config.route = \"/products/\" + id;\n  return queryService(config);\n};\nexport var createProduct = function createProduct(body) {\n  return fetch(\"\".concat(api, \"/products\"), {\n    method: 'POST',\n    headers: {\n      'Authorization': Session.getToken()\n    },\n    body: body\n  }).then(function (res) {\n    if (res.ok) return res ? res.json() : {};else throw res.json();\n  }).catch(function () {\n    var err = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (err.then) return err.then(function (data) {\n      throw data;\n    });else {\n      throw {\n        message: 'Error in Connection'\n      };\n    }\n  });\n};\nexport var updateProduct = function updateProduct(body, uId) {\n  return fetch(\"\".concat(api, \"/products/\").concat(uId), {\n    method: 'PUT',\n    headers: {\n      'Authorization': Session.getToken()\n    },\n    body: body\n  }).then(function (res) {\n    if (res.ok) return res ? res.json() : {};else throw res.json();\n  }).catch(function () {\n    var err = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (err.then) return err.then(function (data) {\n      throw data;\n    });else {\n      throw {\n        message: 'Error in Connection'\n      };\n    }\n  });\n};\nexport var deleteProduct = function deleteProduct(body, id) {\n  var config = {};\n  config.method = 'PUT';\n  config.route = \"/delete-product/\".concat(id);\n  config.body = body;\n  return queryService(config);\n}; // ACTIVITIES\n\nexport var getActivities = function getActivities(_ref5) {\n  var _ref5$params = _ref5.params,\n      params = _ref5$params === void 0 ? {} : _ref5$params;\n  var config = {};\n  config.method = 'GET';\n  config.route = \"/activity\";\n  config.params = params;\n  return queryService(config);\n}; // ORDERS\n\nexport var getOrders = function getOrders(_ref6) {\n  var _ref6$params = _ref6.params,\n      params = _ref6$params === void 0 ? {} : _ref6$params;\n  var config = {};\n  config.method = 'GET';\n  config.route = \"/orders\";\n  config.params = params;\n  return queryService(config);\n};\nexport var getOrder = function getOrder(id) {\n  var config = {};\n  config.method = 'GET';\n  config.route = \"/orders/\".concat(id);\n  return queryService(config);\n};\nexport var completeOrder = function completeOrder(id) {\n  var config = {};\n  config.method = 'PUT';\n  config.route = \"/orders/\".concat(id);\n  return queryService(config);\n}; // REPORTS\n\nexport var getReports = function getReports() {\n  var config = {};\n  config.method = 'GET';\n  config.route = \"/reports\";\n  return queryService(config);\n};\nexport var getAnnualReport = function getAnnualReport() {\n  // const config={}\n  // config.method = 'GET'\n  // config.route = `/annual/reports`\n  // return queryService(config)\n  return fetch(\"\".concat(api, \"/annual/reports\"), {\n    method: 'GET',\n    headers: {\n      'Authorization': Session.getToken()\n    }\n  }).then(function (res) {\n    if (res.ok) return res ? res.json() : {};else throw res.json();\n  }).catch(function () {\n    var err = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (err.then) return err.then(function (data) {\n      throw data;\n    });else {\n      throw {\n        message: 'Error in Connection'\n      };\n    }\n  });\n};\nexport var getReport = function getReport(params, id) {\n  var config = {};\n  config.method = 'GET';\n  config.route = \"/reports/\".concat(id);\n  config.params = params;\n  return queryService(config);\n};\nexport var getAverageReports = function getAverageReports() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var config = {};\n  config.method = 'GET';\n  config.route = \"/average/reports\";\n  config.params = params;\n  return queryService(config);\n};\nexport var resetPassword = function resetPassword(body, token, id) {\n  return fetch(\"\".concat(api, \"/auth/forget_password/new_password?id=\").concat(id, \"&verify_token=\").concat(token), {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'x-access-token': token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  }).then(function (res) {\n    return res.json();\n  }).catch(function () {\n    var err = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (err.then) return err.then(function (data) {\n      throw data;\n    });else {\n      throw {\n        message: 'Error in Connection'\n      };\n    }\n  });\n};\nexport var forgotPassword = function forgotPassword(body) {\n  var config = {};\n  config.method = 'POST';\n  config.route = '/auth/forget_password';\n  config.body = body;\n  return queryService(config);\n};\nexport var queryService = function queryService(_ref7) {\n  var route = _ref7.route,\n      method = _ref7.method,\n      body = _ref7.body,\n      params = _ref7.params;\n\n  var new_headers = _objectSpread({}, headers, {\n    'Authorization': Session.getToken()\n  });\n\n  var new_body = body ? JSON.stringify(body) : null;\n\n  for (var p in params) {\n    params[p] = params[p] || undefined;\n  }\n\n  params = _objectSpread({\n    t: true ? new Date().getTime() : undefined\n  }, params);\n  var serializeParams = params ? '?' + qs.stringify(params, {\n    sort: false\n  }) : '';\n  return fetch(\"\".concat(api).concat(route).concat(serializeParams), {\n    method: method,\n    headers: _objectSpread({}, new_headers),\n    body: new_body\n  }).then(function (res) {\n    if (res.ok) return res ? res.json() : {};else throw res.json();\n  }).catch(function () {\n    var err = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (err.then) return err.then(function (data) {\n      throw data;\n    });else {\n      throw {\n        message: 'Error in Connection'\n      };\n    }\n  });\n};","map":{"version":3,"sources":["/home/cdi_5/agri_thesis_front/src/services/API.js"],"names":["Session","api","qs","require","token","getToken","headers","login","body","config","method","route","queryService","logout","getUsers","params","getUser","id","createUser","updateUser","uId","changePassword","deleteUser","getRoles","createRole","getProducts","getProduct","createProduct","fetch","then","res","ok","json","catch","err","data","message","updateProduct","deleteProduct","getActivities","getOrders","getOrder","completeOrder","getReports","getAnnualReport","getReport","getAverageReports","resetPassword","JSON","stringify","forgotPassword","new_headers","new_body","p","undefined","t","Date","getTime","serializeParams","sort"],"mappings":"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","sourcesContent":["import * as Session from '../services/session';\r\n\r\nconst api = `http://52.74.76.145:8084/v1`\r\nconst qs = require('query-string');\r\nlet token = Session.getToken()\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token,\r\n  'Content-Type': 'application/json'\r\n}\r\n\r\n// LOGIN\r\n\r\nexport const login = (body) => {\r\n  const config= {}\r\n  config.method = 'POST'\r\n  config.route = `/users/login`\r\n  config.body = body\r\n  return queryService(config)\r\n  // fetch(`${api}/users/login`, {\r\n  //   method: 'POST',\r\n  //   headers,\r\n  //   body: JSON.stringify({\r\n  //     username:body.username,\r\n  //     password:body.password})\r\n  // }).then(res => res.json(),err => console.log(err))\r\n}\r\n\r\nexport const logout = () => {\r\n  const config= {}\r\n  config.method = 'POST'\r\n  config.route = `/users/logout`\r\n  return queryService(config)\r\n}\r\n\r\n// USERS\r\n\r\nexport const getUsers = ({params={}}) => {\r\n  const config={}\r\n  config.method = 'GET'\r\n  config.route = `/users`\r\n  config.params = params\r\n  return queryService(config)\r\n}\r\n\r\nexport const getUser = (id) => {\r\n  const config={}\r\n  config.method = 'GET'\r\n  config.route = `/users/` + id\r\n  return queryService(config)\r\n}\r\n\r\nexport const createUser = (body) => {\r\n  const config= {}\r\n  config.method = 'POST'\r\n  config.route = `/users`\r\n  config.body = body\r\n  return queryService(config)\r\n}\r\n\r\nexport const updateUser = (body, uId, {params={}}) => {\r\n  const config= {}\r\n  config.method = 'PUT'\r\n  config.route = `/users/${uId}`\r\n  config.params = params\r\n  config.body = body\r\n  return queryService(config)\r\n}\r\n\r\nexport const changePassword = (body, uId) => {\r\n  const config= {}\r\n  config.method = 'PUT'\r\n  config.route = `/update-password/${uId}`\r\n  config.body = body\r\n  return queryService(config)\r\n}\r\n\r\nexport const deleteUser = ({id}) => {\r\n  const config= {}\r\n  config.method = 'PUT'\r\n  config.route = `/delete-user/${id}`\r\n  return queryService(config)\r\n}\r\n\r\n// ROLES\r\n\r\nexport const getRoles = () => {\r\n  const config={}\r\n  config.method = 'GET'\r\n  config.route = `/roles`\r\n  return queryService(config)\r\n}\r\n\r\nexport const createRole = (body) => {\r\n  const config= {}\r\n  config.method = 'POST'\r\n  config.route = `/roles`\r\n  config.body = body\r\n  return queryService(config)\r\n}\r\n\r\n// PRODUCTS\r\n\r\nexport const getProducts = ({params={}}) => {\r\n  const config={}\r\n  config.method = 'GET'\r\n  config.route = `/products`\r\n  config.params = params\r\n  return queryService(config)\r\n}\r\n\r\nexport const getProduct = (id) => {\r\n  const config={}\r\n  config.method = 'GET'\r\n  config.route = `/products/` + id\r\n  return queryService(config)\r\n}\r\n\r\nexport const createProduct = (body) => {\r\n  return fetch(`${api}/products`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': Session.getToken(),\r\n    },\r\n    body: body\r\n  })\r\n  .then(res => {\r\n    if (res.ok)\r\n      return res ? res.json() : {}\r\n      else\r\n      throw(res.json());\r\n    }\r\n  )\r\n  .catch( (err={}) => {\r\n    if (err.then)\r\n      return err.then(function(data) {\r\n          throw(data);\r\n      })\r\n    else {\r\n        throw(\r\n          {\r\n              message: 'Error in Connection'\r\n          }\r\n        )\r\n    }\r\n  })\r\n}\r\n\r\nexport const updateProduct = (body, uId) => {\r\n  return fetch(`${api}/products/${uId}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Authorization': Session.getToken(),\r\n    },\r\n    body: body\r\n  })\r\n  .then(res => {\r\n    if (res.ok)\r\n      return res ? res.json() : {}\r\n      else\r\n      throw(res.json());\r\n    }\r\n  )\r\n  .catch( (err={}) => {\r\n    if (err.then)\r\n      return err.then(function(data) {\r\n          throw(data);\r\n      })\r\n    else {\r\n        throw(\r\n          {\r\n              message: 'Error in Connection'\r\n          }\r\n        )\r\n    }\r\n  })\r\n}\r\n\r\nexport const deleteProduct = (body,id) => {\r\n  const config= {}\r\n  config.method = 'PUT'\r\n  config.route = `/delete-product/${id}`\r\n  config.body = body\r\n  return queryService(config)\r\n}\r\n\r\n// ACTIVITIES\r\nexport const getActivities = ({params={}}) => {\r\n  const config={}\r\n  config.method = 'GET'\r\n  config.route = `/activity`\r\n  config.params = params\r\n  return queryService(config)\r\n}\r\n\r\n// ORDERS\r\nexport const getOrders = ({params={}}) => {\r\n  const config={}\r\n  config.method = 'GET'\r\n  config.route = `/orders`\r\n  config.params = params\r\n  return queryService(config)\r\n}\r\n\r\nexport const getOrder = (id) => {\r\n  const config={}\r\n  config.method = 'GET'\r\n  config.route = `/orders/${id}`\r\n  return queryService(config)\r\n}\r\n\r\nexport const completeOrder = (id) => {\r\n  const config={}\r\n  config.method = 'PUT'\r\n  config.route = `/orders/${id}`\r\n  return queryService(config)\r\n}\r\n\r\n// REPORTS\r\n\r\nexport const getReports = () => {\r\n  const config={}\r\n  config.method = 'GET'\r\n  config.route = `/reports`\r\n  return queryService(config)\r\n}\r\n\r\nexport const getAnnualReport = () => {\r\n  // const config={}\r\n  // config.method = 'GET'\r\n  // config.route = `/annual/reports`\r\n  // return queryService(config)\r\n  return fetch(`${api}/annual/reports`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': Session.getToken(),\r\n    },\r\n  })\r\n  .then(res => {\r\n    if (res.ok)\r\n      return res ? res.json() : {}\r\n      else\r\n      throw(res.json());\r\n    }\r\n  )\r\n  .catch( (err={}) => {\r\n    if (err.then)\r\n      return err.then(function(data) {\r\n          throw(data);\r\n      })\r\n    else {\r\n        throw(\r\n          {\r\n              message: 'Error in Connection'\r\n          }\r\n        )\r\n    }\r\n  })\r\n}\r\n\r\nexport const getReport = (params, id) => {\r\n  const config={}\r\n  config.method = 'GET'\r\n  config.route = `/reports/${id}`\r\n  config.params = params\r\n  return queryService(config)\r\n}\r\n\r\nexport const getAverageReports = (params={}) => {\r\n  const config={}\r\n  config.method = 'GET'\r\n  config.route = `/average/reports`\r\n  config.params = params\r\n  return queryService(config)\r\n}\r\n\r\nexport const resetPassword = (body,token,id) =>\r\n  fetch(`${api}/auth/forget_password/new_password?id=${id}&verify_token=${token}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'x-access-token': token,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(body)\r\n  })\r\n  .then(res => res.json())\r\n  .catch( (err={}) => {\r\n    if (err.then)\r\n      return err.then(function(data) {\r\n          throw(data);\r\n      })\r\n    else {\r\n        throw(\r\n          {\r\n              message: 'Error in Connection'\r\n          }\r\n        )\r\n    }\r\n  }\r\n)\r\n\r\nexport const forgotPassword = (body) => {\r\n  const config= {}\r\n  config.method = 'POST'\r\n  config.route = '/auth/forget_password'\r\n  config.body = body\r\n  return queryService(config)\r\n}\r\n\r\nexport const queryService = ( { route, method, body, params } ) => {\r\n\r\n  const new_headers = { \r\n      ...headers,\r\n      'Authorization': Session.getToken()\r\n    }\r\n  \r\n  const new_body = body ? JSON.stringify(body) : null\r\n\r\n  for (let p in params) {\r\n      params[p] = params[p] || undefined\r\n  }\r\n  params = {\r\n    t: true ? (new Date().getTime()) : undefined,\r\n    ...params\r\n  }\r\n  const serializeParams = params ? ( '?' +qs.stringify(params, {sort: false})) : '';\r\n  return fetch(`${api}${route}${serializeParams}`, {\r\n      method,\r\n      headers: {...new_headers},\r\n      body: new_body\r\n  }).then(res => {\r\n      if (res.ok)\r\n        return res ? res.json() : {}\r\n        else\r\n        throw(res.json());\r\n      }\r\n  ).catch( (err={}) => {\r\n        if (err.then)\r\n          return err.then(function(data) {\r\n              throw(data);\r\n          })\r\n        else {\r\n            throw(\r\n              {\r\n                  message: 'Error in Connection'\r\n              }\r\n            )\r\n        }\r\n      }\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
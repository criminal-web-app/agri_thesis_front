{"ast":null,"code":"import _objectSpread from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/cdi_5/agri_thesis_front/src/components/Reports.js\";\nimport React, { Component } from 'react';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport { Row, Col, Button } from 'reactstrap';\nimport { TOAST, DATE, gDp } from '../helpers/helpers';\nimport * as API from '../services/API';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport moment from 'moment';\nimport Loader from './Loader';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { FaCalendar } from 'react-icons/fa/';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nvar month = new Array();\nmonth[0] = \"January\";\nmonth[1] = \"February\";\nmonth[2] = \"March\";\nmonth[3] = \"April\";\nmonth[4] = \"May\";\nmonth[5] = \"June\";\nmonth[6] = \"July\";\nmonth[7] = \"August\";\nmonth[8] = \"September\";\nmonth[9] = \"October\";\nmonth[10] = \"November\";\nmonth[11] = \"December\";\n\nvar qs = require('query-string');\n\nvar Reports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Reports, _Component);\n\n  function Reports() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Reports);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Reports)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.urlSearch = qs.parse(_this.props.history.location.search);\n    _this.state = {\n      data: [],\n      report: [],\n      isLoading: true,\n      average_report: [],\n      report_name: '',\n      pageState: {\n        start_date: _this.urlSearch.start_date,\n        end_date: _this.urlSearch.end_date\n      }\n    };\n\n    _this.fetchData = function (id) {\n      var is_average = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (id) {\n        _this.getReport(id);\n      } else if (_this.props.apiRoute === 'getAnnualReport') {\n        _this.getAnnual();\n      } else {\n        _this.getAverage();\n      }\n    };\n\n    _this.getReport = function (id) {\n      var st = _this.state;\n\n      _this.setState({\n        isLoading: true\n      });\n\n      var params = {\n        start_date: st.pageState.start_date || '',\n        end_date: st.pageState.end_date || ''\n      };\n      !st.pageState.start_date && delete params.start_date;\n      !st.pageState.end_date && delete params.end_date;\n      API.getReport(params, id).then(function (response) {\n        _this.setState({\n          report: response.data\n        });\n      }, function (err) {\n        TOAST.pop({\n          report: [],\n          message: err.message,\n          type: 'error'\n        });\n      }).finally(function () {\n        return _this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    _this.getAnnual = function () {\n      var st = _this.state;\n\n      _this.setState({\n        isLoading: true\n      });\n\n      API.getAnnualReport().then(function (response) {\n        var report = response.data.map(function (months) {\n          return _objectSpread({}, months, {\n            Month: month[months.Month - 1]\n          });\n        });\n\n        _this.setState({\n          annual_report: report\n        });\n      }, function (err) {\n        TOAST.pop({\n          annual_report: [],\n          message: err.message,\n          type: 'error'\n        });\n      }).finally(function () {\n        return _this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    _this.getAverage = function () {\n      var st = _this.state;\n\n      _this.setState({\n        isLoading: true\n      });\n\n      var params = {\n        start_date: st.pageState.start_date || '',\n        end_date: st.pageState.end_date || '' // !st.pageState.start_date && delete params.start_date\n        // !st.pageState.end_date && delete params.end_date\n\n      };\n      API.getAverageReports(params).then(function (response) {\n        var report = [_objectSpread({}, response.data, {\n          fw1: response.data.avg_fw1,\n          bw1: response.data.avg_bw1,\n          fw2: response.data.avg_fw2,\n          bw2: response.data.avg_bw2,\n          fw3: response.data.avg_fw3,\n          bw3: response.data.avg_bw3,\n          fw4: response.data.avg_fw4,\n          bw4: response.data.avg_bw4,\n          fw5: response.data.avg_fw5,\n          bw5: response.data.avg_bw5,\n          fw6: response.data.avg_fw6,\n          bw6: response.data.avg_bw6,\n          fw7: response.data.avg_fw7,\n          bw7: response.data.avg_bw7,\n          fw8: response.data.avg_fw8,\n          bw8: response.data.avg_bw8\n        })];\n\n        _this.setState({\n          report: report\n        });\n      }, function (err) {\n        TOAST.pop({\n          report: [],\n          message: err.message,\n          type: 'error'\n        });\n      }).finally(function () {\n        return _this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    _this.componentDidMount = function () {\n      var id = _this.props.match.params.id;\n\n      _this.setState({\n        isLoading: true\n      });\n\n      API.getReports().then(function (response) {\n        var newData = response.data.filter(function (report, index, self) {\n          return index === self.findIndex(function (t) {\n            return t.activity_id === report.activity_id;\n          });\n        });\n\n        _this.setState({\n          data: newData\n        }); // this.setState({data: response.data})\n\n      }, function (err) {\n        TOAST.pop({\n          message: err.message,\n          type: 'error'\n        });\n      }).finally(function () {\n        _this.setState({\n          isLoading: false\n        });\n\n        _this.fetchData(id);\n      });\n    };\n\n    _this.componentWillReceiveProps = function (newProps) {\n      var id = newProps.match.params.id;\n      console.log(newProps);\n\n      _this.setState({\n        isLoading: true\n      });\n\n      if (newProps.location.pathname === '/reports') {\n        _this.getAverage();\n      } else if (newProps.location.pathname === '/report/annual') {\n        _this.getAnnual();\n      } else {\n        _this.getReport(id);\n      }\n    };\n\n    _this.handleDateRange = function (event, picker) {\n      var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n      var st = _this.state;\n      var id = _this.props.match.params.id;\n\n      _this.setState({\n        pageState: {\n          start_date: picker.startDate.format(DATE.DATE_DASH),\n          end_date: picker.endDate.format(DATE.DATE_DASH)\n        }\n      }, function () {\n        _this.props.history.push(\"?start_date=\".concat(picker.startDate.format(DATE.DATE_DASH), \"&end_date=\").concat(picker.endDate.format(DATE.DATE_DASH)));\n\n        if (id) {\n          _this.fetchData(id, picker.startDate.format(DATE.DATE_DASH));\n        } else {\n          _this.fetchData('', true);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Reports, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var st = this.state;\n      var pr = this.props;\n      var id = this.props.match.params.id;\n      var startDate = gDp(st.pageState, 'start_date') ? moment(gDp(st.pageState, 'start_date'), DATE.DATE_DASH) : '';\n      var endDate = gDp(st.pageState, 'end_date') ? moment(gDp(st.pageState, 'end_date'), DATE.DATE_DASH) : '';\n      var emptyDateCond = startDate === '' && endDate === '';\n      var is_annual = !!this.props.apiRoute;\n      var newParams = st.pageState.start_date ? \"?start_date=\".concat(st.pageState.start_date, \"&end_date=\").concat(st.pageState.end_date) : '';\n      var reports = [];\n      st.data.map(function (report, pos) {\n        return reports.push(React.createElement(Button, {\n          key: report.id,\n          color: id === report.activity_id ? \"primary\" : \"secondary\",\n          style: {\n            width: '100%',\n            marginBottom: '5px'\n          },\n          onClick: function onClick() {\n            console.log(report);\n\n            _this2.setState({\n              report_name: report.name\n            });\n\n            pr.history.push(\"/report/\".concat(report.activity_id).concat(newParams));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, report.name));\n      });\n      var data = st.report.length ? [{\n        name: 1,\n        fw: st.report[0].fw1,\n        bw: st.report[0].bw1\n      }, {\n        name: 2,\n        fw: st.report[0].fw2,\n        bw: st.report[0].bw2\n      }, {\n        name: 3,\n        fw: st.report[0].fw3,\n        bw: st.report[0].bw3\n      }, {\n        name: 4,\n        fw: st.report[0].fw4,\n        bw: st.report[0].bw4\n      }, {\n        name: 5,\n        fw: st.report[0].fw5,\n        bw: st.report[0].bw5\n      }, {\n        name: 6,\n        fw: st.report[0].fw6,\n        bw: st.report[0].bw6\n      }, {\n        name: 7,\n        fw: st.report[0].fw7,\n        bw: st.report[0].bw7\n      }, {\n        name: 8,\n        fw: st.report[0].fw8,\n        bw: st.report[0].bw8\n      }] : '';\n      var params = st.pageState.start_date ? \"?start_date=\".concat(st.pageState.start_date, \"&end_date=\").concat(st.pageState.end_date) : '';\n      console.log(st.annual_report);\n      var report_name = pr.location.pathname === '/reports' ? 'Average' : pr.location.pathname === '/report/annual' ? 'Annual' : st.report_name;\n      return React.createElement(\"div\", {\n        style: {\n          margin: '0 5% 15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        md: \"3\",\n        style: {\n          overflowY: 'auto',\n          background: 'white',\n          marginBottom: '10px',\n          border: '2px solid #014401',\n          borderRadius: '5px',\n          paddingTop: '10px'\n        },\n        className: \"report-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: !id && pr.apiRoute ? \"primary\" : \"secondary\",\n        style: {\n          width: '100%',\n          marginBottom: '5px'\n        },\n        onClick: function onClick() {\n          return pr.history.push(\"/report/annual\".concat(newParams));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Annual Report\"), \",\", React.createElement(Button, {\n        color: !id && !pr.apiRoute ? \"primary\" : \"secondary\",\n        style: {\n          width: '100%',\n          marginBottom: '5px'\n        },\n        onClick: function onClick() {\n          return pr.history.push(\"/reports\".concat(newParams));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Average Report\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Select Report: \"), reports), React.createElement(Col, {\n        sm: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        md: \"4\",\n        lg: \"3\",\n        style: {\n          padding: '0',\n          marginBottom: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"react-date-range-picker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(DateRangePicker // opens=\"left\"\n      , Object.assign({}, startDate ? {\n        startDate: startDate\n      } : {}, endDate ? {\n        endDate: endDate\n      } : {}, {\n        ranges: {\n          'This Month': [moment().startOf('month'), moment().endOf('month')],\n          'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\n        },\n        onApply: this.handleDateRange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"button\",\n        className: \"pad-0 react-date-range-input\",\n        size: \"sm\",\n        color: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"btn-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(FaCalendar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), \"\\xA0\"), emptyDateCond ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"All\") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"\".concat(startDate.format(\"MMMM\"))))))), React.createElement(Button, {\n        style: {\n          top: '-2px',\n          right: '5px'\n        },\n        size: \"sm\",\n        className: \"form-control-sm-font-size remove\",\n        color: \"link\",\n        onClick: function onClick(e) {\n          _this2.setState({\n            pageState: {\n              start_date: '',\n              end_date: ''\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \" X \"))))), React.createElement(Col, {\n        align: \"right\",\n        style: {\n          paddingRight: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"success\",\n        style: {\n          padding: '0 30px'\n        },\n        onClick: function onClick() {\n          return window.open(\"/report/print/\".concat(id ? id : pr.apiRoute ? 'annual' : 'average').concat(params));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"Print Report\"))), React.createElement(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '20px',\n          width: '100%',\n          fontWeight: 'bold'\n        },\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, report_name, \" Report for the month of \", startDate.format(\"MMMM\")), is_annual ? React.createElement(ResponsiveContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(BarChart // width={800}\n      // height={300}\n      , {\n        data: st.annual_report,\n        margin: {\n          top: 30,\n          right: 15,\n          left: 5,\n          bottom: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"Month\",\n        tickSize: true,\n        dy: \"25\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }), React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        name: \"Fresh Weight Test\",\n        dataKey: \"avg_fw\",\n        fill: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        name: \"Dry Weight Test\",\n        dataKey: \"avg_bw\",\n        fill: \"#8884d8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }))) : React.createElement(ResponsiveContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(BarChart // width={800}\n      // height={300}\n      , {\n        data: data,\n        margin: {\n          top: 30,\n          right: 15,\n          left: 5,\n          bottom: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"name\",\n        tickSize: true,\n        dy: \"25\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }), React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        name: \"Fresh Weight Test\",\n        dataKey: \"fw\",\n        fill: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        name: \"Dry Weight Test\",\n        dataKey: \"bw\",\n        fill: \"#8884d8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      })))))), React.createElement(Loader, {\n        message: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          },\n          __self: this\n        }, \"Loading...\")),\n        isLoading: st.isLoading || false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Reports;\n}(Component);\n\nexport default withRouter(Reports);","map":{"version":3,"sources":["/home/cdi_5/agri_thesis_front/src/components/Reports.js"],"names":["React","Component","withRouter","NavLink","Row","Col","Button","TOAST","DATE","gDp","API","DateRangePicker","moment","Loader","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","FaCalendar","month","Array","qs","require","Reports","urlSearch","parse","props","history","location","search","state","data","report","isLoading","average_report","report_name","pageState","start_date","end_date","fetchData","id","is_average","getReport","apiRoute","getAnnual","getAverage","st","setState","params","then","response","err","pop","message","type","finally","getAnnualReport","map","months","Month","annual_report","getAverageReports","fw1","avg_fw1","bw1","avg_bw1","fw2","avg_fw2","bw2","avg_bw2","fw3","avg_fw3","bw3","avg_bw3","fw4","avg_fw4","bw4","avg_bw4","fw5","avg_fw5","bw5","avg_bw5","fw6","avg_fw6","bw6","avg_bw6","fw7","avg_fw7","bw7","avg_bw7","fw8","avg_fw8","bw8","avg_bw8","componentDidMount","match","getReports","newData","filter","index","self","findIndex","t","activity_id","componentWillReceiveProps","newProps","console","log","pathname","handleDateRange","event","picker","that","startDate","format","DATE_DASH","endDate","push","pr","emptyDateCond","is_annual","newParams","reports","pos","width","marginBottom","name","length","fw","bw","margin","overflowY","background","border","borderRadius","paddingTop","padding","startOf","endOf","subtract","top","right","e","paddingRight","window","open","position","fontWeight","left","bottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter, NavLink } from 'react-router-dom' \nimport { Row, Col, Button } from 'reactstrap'\nimport { TOAST, DATE, gDp } from '../helpers/helpers'\n\nimport * as API from '../services/API'\nimport DateRangePicker from 'react-bootstrap-daterangepicker'\nimport moment from 'moment';\nimport Loader from './Loader'\n\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\n\nimport {FaCalendar} from 'react-icons/fa/'\nimport 'bootstrap-daterangepicker/daterangepicker.css';\n\nvar month = new Array();\nmonth[0] = \"January\";\nmonth[1] = \"February\";\nmonth[2] = \"March\";\nmonth[3] = \"April\";\nmonth[4] = \"May\";\nmonth[5] = \"June\";\nmonth[6] = \"July\";\nmonth[7] = \"August\";\nmonth[8] = \"September\";\nmonth[9] = \"October\";\nmonth[10] = \"November\";\nmonth[11] = \"December\";\nconst qs = require('query-string');\nclass Reports extends Component {\n    urlSearch = qs.parse(this.props.history.location.search)\n    state = {\n        data:[],\n        report:[],\n        isLoading: true,\n        average_report: [],\n        report_name: '',\n        pageState: {\n            start_date: this.urlSearch.start_date,\n            end_date: this.urlSearch.end_date\n        },\n    }\n\n    fetchData = (id,is_average=false) => {\n        if(id){\n            this.getReport(id)\n        } else if(this.props.apiRoute==='getAnnualReport'){\n            this.getAnnual()\n        } else {\n            this.getAverage()\n        }\n    }\n\n    getReport = (id) => {\n        const st = this.state\n        this.setState({isLoading: true})\n        const params = {\n            start_date: st.pageState.start_date || '',\n            end_date: st.pageState.end_date || ''\n        }\n        !st.pageState.start_date && delete params.start_date\n        !st.pageState.end_date && delete params.end_date\n        API.getReport(params,id)\n        .then((response)=>{\n            this.setState({report: response.data})\n        }, err => {\n            TOAST.pop({report: [], message: err.message, type: 'error'})\n        }).finally(()=> \n            this.setState({isLoading: false})\n        )\n    }\n\n    getAnnual = () => {\n        const st = this.state\n        this.setState({isLoading: true})\n        API.getAnnualReport()\n        .then((response)=>{\n            const report = response.data.map((months)=> {return {...months, Month: month[months.Month-1]}})\n            this.setState({annual_report: report})\n        }, err => {\n            TOAST.pop({annual_report:[], message: err.message, type: 'error'})\n        }).finally(()=> \n            this.setState({isLoading: false})\n        )\n    }\n\n    getAverage = () => {\n        const st = this.state\n        this.setState({isLoading: true})\n        const params = {\n            start_date: st.pageState.start_date || '',\n            end_date: st.pageState.end_date || ''\n        }\n        // !st.pageState.start_date && delete params.start_date\n        // !st.pageState.end_date && delete params.end_date\n        API.getAverageReports(params)\n        .then((response)=>{\n            const report = [{...response.data,\n                fw1: response.data.avg_fw1, bw1: response.data.avg_bw1,\n                fw2: response.data.avg_fw2, bw2: response.data.avg_bw2,\n                fw3: response.data.avg_fw3, bw3: response.data.avg_bw3,\n                fw4: response.data.avg_fw4, bw4: response.data.avg_bw4,\n                fw5: response.data.avg_fw5, bw5: response.data.avg_bw5,\n                fw6: response.data.avg_fw6, bw6: response.data.avg_bw6,\n                fw7: response.data.avg_fw7, bw7: response.data.avg_bw7,\n                fw8: response.data.avg_fw8, bw8: response.data.avg_bw8,\n            }]\n            this.setState({report: report})\n        }, err => {\n            TOAST.pop({report: [],message: err.message, type: 'error'})\n        }).finally(()=> \n            this.setState({isLoading: false})\n        )\n    }\n\n    componentDidMount = () => {\n        const {id} = this.props.match.params\n        this.setState({isLoading: true})\n        API.getReports()\n        .then((response)=>{\n            const newData = response.data.filter((report,index,self)=>\n                index === self.findIndex((t) => (\n                t.activity_id === report.activity_id\n              ))\n            )\n            this.setState({data: newData})\n            // this.setState({data: response.data})\n        }, err => {\n            TOAST.pop({message: err.message, type: 'error'})\n        }).finally(()=> {\n            this.setState({isLoading: false})\n            this.fetchData(id)\n        })\n    }\n\n    componentWillReceiveProps = (newProps) => {\n        const {id} = newProps.match.params\n        console.log(newProps)\n        this.setState({isLoading: true})\n        if(newProps.location.pathname==='/reports') {\n            this.getAverage()\n        } else if(newProps.location.pathname==='/report/annual') {\n            this.getAnnual()\n        } else{\n            this.getReport(id)\n        }\n    }\n\n    handleDateRange = (event, picker) => {\n        const that = this\n        const st = this.state\n        const {id} = this.props.match.params\n        this.setState({\n            pageState: {\n                start_date: picker.startDate.format(DATE.DATE_DASH),\n                end_date: picker.endDate.format(DATE.DATE_DASH)\n            }\n            },()=> {\n                this.props.history.push(`?start_date=${picker.startDate.format(DATE.DATE_DASH)}&end_date=${picker.endDate.format(DATE.DATE_DASH)}`)\n                if(id){\n                    this.fetchData(id, picker.startDate.format(DATE.DATE_DASH))\n                } else {\n                    this.fetchData('', true)\n                }\n            })\n    }\n\n    render() {\n        const st= this.state\n        const pr = this.props\n        const {id} = this.props.match.params\n        const startDate = gDp(st.pageState,'start_date') ? moment(gDp(st.pageState,'start_date'),DATE.DATE_DASH) : ''\n        const endDate = gDp(st.pageState,'end_date') ? moment(gDp(st.pageState,'end_date'),DATE.DATE_DASH) : ''\n        const emptyDateCond = startDate==='' && endDate ===''\n        const is_annual = !!this.props.apiRoute\n        const newParams = st.pageState.start_date ? `?start_date=${st.pageState.start_date}&end_date=${st.pageState.end_date}` : ''\n        const reports = [\n            \n        ]\n        st.data.map((report, pos)=> \n            reports.push(\n            <Button key={report.id} color={id===report.activity_id ? \"primary\" : \"secondary\"} style={{width: '100%', marginBottom: '5px'}}\n                onClick={()=>{\n                    console.log(report)\n                    this.setState({report_name: report.name})\n                    pr.history.push(`/report/${report.activity_id}${newParams}`)}}>\n                {report.name}\n            </Button>\n        ))\n        const data = st.report.length ? [\n            {\n                name: 1, fw: st.report[0].fw1, bw: st.report[0].bw1\n            },\n            {\n                name: 2, fw: st.report[0].fw2, bw: st.report[0].bw2\n            },\n            {\n                name: 3, fw: st.report[0].fw3, bw: st.report[0].bw3\n            },\n            {\n                name: 4, fw: st.report[0].fw4, bw: st.report[0].bw4\n            },\n            {\n                name: 5, fw: st.report[0].fw5, bw: st.report[0].bw5\n            },\n            {\n                name: 6, fw: st.report[0].fw6, bw: st.report[0].bw6\n            },\n            {\n                name: 7, fw: st.report[0].fw7, bw: st.report[0].bw7\n            },\n            {\n                name: 8, fw: st.report[0].fw8, bw: st.report[0].bw8\n            },\n        ] : ''\n\n        const params = st.pageState.start_date ? `?start_date=${st.pageState.start_date}&end_date=${st.pageState.end_date}` : ''\n        console.log(st.annual_report)\n        const report_name = pr.location.pathname==='/reports' ? 'Average' :\n                            pr.location.pathname==='/report/annual' ? 'Annual' : \n                            st.report_name\n        return (\n            <div style={{margin: '0 5% 15px'}}> \n                <Row>\n                    <Col sm=\"12\" md=\"3\" style={{overflowY:'auto', background: 'white', marginBottom: '10px', border: '2px solid #014401', borderRadius: '5px', paddingTop: '10px'}} className=\"report-buttons\">\n                    <Button color={!id && pr.apiRoute ? \"primary\" : \"secondary\"} style={{width: '100%', marginBottom: '5px'}}\n                        onClick={()=>pr.history.push(`/report/annual${newParams}`)}>\n                        Annual Report\n                    </Button>,\n                    <Button color={!id && !pr.apiRoute ? \"primary\" : \"secondary\"} style={{width: '100%', marginBottom: '5px'}}\n                        onClick={()=>pr.history.push(`/reports${newParams}`)}>\n                        Average Report\n                    </Button>\n                        <div>Select Report: </div>\n                        {reports}\n                    </Col>\n                    <Col sm=\"12\" md=\"9\">\n                        <Row>\n                            <Col sm=\"12\" md=\"4\" lg=\"3\" style={{padding: '0', marginBottom: '10px'}}>\n                                <div>\n                                    <div className=\"react-date-range-picker\">\n                                        <DateRangePicker\n                                            // opens=\"left\"\n                                            {...(startDate) ? {startDate} : {}}\n                                            {...(endDate) ? {endDate} : {}}\n                                            ranges={{\n                                                'This Month': [moment().startOf('month'), moment().endOf('month')],\n                                                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\n                                            }}\n                                            onApply={this.handleDateRange}\n                                            >\n                                            <div>\n                                                <Button type=\"button\" className=\"pad-0 react-date-range-input\" size='sm' color=\"link\">\n                                                    <i className=\"btn-icon\">\n                                                        <FaCalendar/>&nbsp;\n                                                    </i>\n                                                    {\n                                                        emptyDateCond ? (\n                                                            <span>All</span>\n                                                        ) :\n                                                        (\n                                                            <span>\n                                                                <span>{`${startDate.format(\"MMMM\")}`}</span>\n                                                            </span>\n\n                                                        )\n                                                    }\n                                                </Button>\n                                            </div>\n                                        </DateRangePicker>\n                                        <Button style={{top:'-2px', right:'5px'}} size=\"sm\" className=\"form-control-sm-font-size remove\" color=\"link\" onClick={(e)=>{\n                                            this.setState({\n                                                pageState: {\n                                                    start_date: '',end_date: ''\n                                                }\n                                            })\n                                            }\n                                        }\n                                        >\n                                            <strong> X </strong>\n                                        </Button>\n                                    </div>\n                                </div>\n                            </Col>\n                            <Col align=\"right\" style={{paddingRight: '0'}}>\n                                <Button color=\"success\" style={{padding: '0 30px'}} onClick={()=>window.open(`/report/print/${id? id: pr.apiRoute? 'annual': 'average'}${params}`)}>\n                                    Print Report\n                                </Button>\n                            </Col>\n                        </Row>\n                        \n                        <div style={{position:'relative'}}>\n                            <div style={{position:'absolute', top: '20px', width: '100%', fontWeight:'bold'}} align=\"center\">{report_name} Report for the month of {startDate.format(\"MMMM\")}</div>\n                            {is_annual ? \n\n                            <ResponsiveContainer>\n                                <BarChart\n                                    // width={800}\n                                    // height={300}\n                                    data={st.annual_report}\n                                    margin={{\n                                    top: 30, right: 15, left: 5, bottom: 15,\n                                    }}\n                                >\n                                    <XAxis dataKey=\"Month\" tickSize\n                                        dy='25'/>\n                                    <YAxis />\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\n                                    <Tooltip />\n                                    <Legend />\n                                    <Bar name=\"Fresh Weight Test\" dataKey=\"avg_fw\" fill=\"#82ca9d\"/>\n                                    <Bar name=\"Dry Weight Test\" dataKey=\"avg_bw\" fill=\"#8884d8\"/>\n                                </BarChart>\n                            </ResponsiveContainer>:\n    \n                            <ResponsiveContainer>\n                                <BarChart\n                                    // width={800}\n                                    // height={300}\n                                    data={data}\n                                    margin={{\n                                    top: 30, right: 15, left: 5, bottom: 15,\n                                    }}\n                                >\n                                    <XAxis dataKey=\"name\" tickSize\n                                        dy='25'/>\n                                    <YAxis />\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\n                                    <Tooltip />\n                                    <Legend />\n                                    <Bar name=\"Fresh Weight Test\" dataKey=\"fw\" fill=\"#82ca9d\"/>\n                                    <Bar name=\"Dry Weight Test\" dataKey=\"bw\" fill=\"#8884d8\"/>\n                                </BarChart>\n                            </ResponsiveContainer>\n                            }\n                        </div>\n                    </Col>\n                </Row>\n                \n                <Loader\n                    message={(\n                        <div>\n                            {/* <h4>Fetching reports</h4> */}\n                            <p>Loading...</p>\n                        </div>\n                    )}\n                    isLoading={st.isLoading || false}\n                />\n            </div>\n        ) ;\n    }\n}\n\nexport default withRouter(Reports);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/cdi_5/Downloads/agri_thesis_front/src/components/Orders.js\";\nimport React, { Component } from 'react';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport { Row, Col, Button, Input } from 'reactstrap';\nimport ReactTable from 'react-table';\nimport * as API from '../services/API';\nimport * as Session from '../services/session';\nimport { Helpers, lS, DefaultState, TOAST, OPTIONS, gDp, DATE_FORMAT } from '../helpers/helpers';\nimport SearchBar from './SearchBar.js';\nimport ConfirmModal from '../modals/ConfirmModal';\nimport background from '../pic/photo.jpg';\nimport { FaTrashAlt, FaEdit, FaCheck, FaTimes } from 'react-icons/fa/';\nimport Loader from './Loader';\n\nvar moment = require('moment');\n\nvar qs = require('query-string'); // React table ref: https://react-table.js.org/#/story/readme\n\n\nvar Products =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Products, _Component);\n\n  function Products() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Products);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Products)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.urlSearch = qs.parse(_this.props.history.location.search);\n    _this.state = {\n      data: [],\n      query: _this.urlSearch.search || '',\n      confirmUser: {\n        username: ''\n      },\n      filter: 'ALL',\n      pageState: {\n        page: parseInt(_this.urlSearch.page || 0) > 0 ? parseInt(_this.urlSearch.page || 0) - 1 : 0,\n        limit: parseInt(_this.urlSearch.limit || 10),\n        sort_id: _this.urlSearch.sort_id || 'created',\n        sort_desc: _this.urlSearch.sort_desc || 'desc',\n        search: _this.urlSearch.search || ''\n      },\n      columns: [{\n        Header: \"Product\",\n        headerClassName: 'text-left',\n        accessor: \"product_name\",\n        Cell: function Cell(row) {\n          return Helpers.handleDisplay(row.value);\n        }\n      }, // {\n      //     Header: \"Status\",\n      //     headerClassName: 'text-left',\n      //     accessor: \"status\",\n      //     Cell: row=> Helpers.handleDisplay(row.value)\n      // },\n      {\n        Header: \"Name\",\n        headerClassName: 'text-left',\n        accessor: \"last_name\",\n        Cell: function Cell(row) {\n          return Helpers.handleDisplay((row.original.last_name ? row.original.last_name + ', ' : '') + row.original.first_name || '');\n        }\n      }, {\n        Header: \"Address\",\n        headerClassName: 'text-left',\n        accessor: \"address\",\n        Cell: function Cell(row) {\n          return Helpers.handleDisplay(row.value);\n        }\n      }, {\n        Header: \"Mobile No.\",\n        headerClassName: 'text-left',\n        accessor: \"phone_number\",\n        Cell: function Cell(row) {\n          return Helpers.handleDisplay(row.value);\n        }\n      }, {\n        Header: \"Email Address\",\n        headerClassName: 'text-left',\n        accessor: \"email\",\n        Cell: function Cell(row) {\n          return Helpers.handleDisplay(row.value);\n        }\n      }, // {\n      //     Header: \"Quantity\",\n      //     headerClassName: 'text-left',\n      //     accessor: \"quantity\",\n      //     Cell: row=> Helpers.handleDisplay(row.value)\n      // },\n      {\n        Header: \"Quantity\",\n        headerClassName: 'text-left',\n        accessor: \"quantity\",\n        Cell: function Cell(row) {\n          return Helpers.handleDisplay(row.value);\n        }\n      }, {\n        Header: \"Status\",\n        headerClassName: 'text-left',\n        accessor: \"_status\",\n        sortable: false,\n        Cell: function Cell(row) {\n          return Helpers.handleDisplay(row.original.is_cancelled ? 'Cancelled' : row.original.is_completed ? 'Completed' : !row.original.is_read ? 'Pending' : 'Processing');\n        }\n      }, // {\n      //     Header: \"Action\",\n      //     headerClassName: 'text-left',\n      //     accessor: \"email\",\n      //     Cell: row=> Helpers.handleDisplay(row.value)\n      // },\n      // {\n      //     Header: \"Total Cost\",\n      //     headerClassName: 'text-left',\n      //     accessor: \"total_cost\",\n      //     Cell: row=> Helpers.handleDisplay(row.value)\n      // },\n      // {\n      //     Header: \"Tracking No.\",\n      //     headerClassName: 'text-left',\n      //     accessor: \"tracking_no\",\n      //     Cell: row=> Helpers.handleDisplay(row.value)\n      // },\n      {\n        Header: \"Total Price\",\n        headerClassName: 'text-left',\n        accessor: \"total_item\",\n        Cell: function Cell(row) {\n          return Helpers.handleDisplay(row.value);\n        }\n      }, {\n        Header: \"Tracking Number\",\n        headerClassName: 'text-left',\n        accessor: \"code\",\n        Cell: function Cell(row) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, React.createElement(Input // className=\"input-sip form-control-sm-font-size input-sm input-height-xsm input-text-sm-pd talign-right\"\n          , {\n            type: \"text\",\n            value: row.value || '',\n            style: {\n              marginBottom: '5px'\n            },\n            onChange: function onChange(e) {\n              console.log(e);\n\n              var newData = _this.state.data.map(function (dataRow, index) {\n                if (index === row.index) {\n                  return _objectSpread({}, dataRow, {\n                    code: e.target.value\n                  });\n                } else {\n                  return _objectSpread({}, dataRow);\n                }\n              });\n\n              _this.setState({\n                data: newData\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }), React.createElement(Button, {\n            color: \"primary\",\n            style: {\n              float: 'right'\n            },\n            onClick: function onClick() {\n              _this.updateOrder(row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }, React.createElement(FaEdit, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }), \" Edit\"));\n        }\n      }, {\n        Header: \"Action\",\n        headerClassName: 'text-left',\n        accessor: \"_actions\",\n        Cell: function Cell(row) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150\n            },\n            __self: this\n          }, React.createElement(Button, {\n            color: \"danger\",\n            style: {\n              marginBottom: '5px',\n              display: 'block',\n              width: '100%'\n            },\n            onClick: function onClick() {\n              return _this.cancelOrder(row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151\n            },\n            __self: this\n          }, React.createElement(FaTimes, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151\n            },\n            __self: this\n          }), \" Cancel\"), React.createElement(Button, {\n            color: \"success\",\n            style: {\n              width: '100%'\n            },\n            onClick: function onClick() {\n              return _this.completeOrder(row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }, React.createElement(FaCheck, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }), \" Complete\"));\n        }\n      }]\n    };\n    _this.prevColumn = _this.state.columns || {};\n\n    _this.updateOrder = function (row) {\n      var body = {\n        code: row.value\n      };\n      API.updateOrder(body, row.original.id).then(function (response) {\n        TOAST.pop({\n          message: \"Sucessfully updated order\"\n        });\n      }, function (err) {\n        TOAST.pop({\n          message: err.message,\n          type: \"error\"\n        });\n      });\n    };\n\n    _this.cancelOrder = function (row) {\n      API.cancelOrder(row.original.id).then(function (response) {\n        TOAST.pop({\n          message: \"Sucessfully cancelled order\"\n        });\n\n        _this.fetchData();\n      }, function (err) {\n        TOAST.pop({\n          message: err.message,\n          type: \"error\"\n        });\n      });\n    };\n\n    _this.completeOrder = function (row) {\n      API.completeOrder(row.original.id).then(function (response) {\n        TOAST.pop({\n          message: \"Sucessfully completed order\"\n        });\n\n        _this.fetchData();\n      }, function (err) {\n        TOAST.pop({\n          message: err.message,\n          type: \"error\"\n        });\n      });\n    };\n\n    _this.selectActionToggled = function (item) {\n      _this.setState({\n        itemData: item\n      });\n    };\n\n    _this.responseGetItems = function (response) {\n      var st = _this.state;\n      response = response || {\n        data: []\n      };\n      response.data = response.data || [];\n      var configState = {\n        data: response.data,\n        total: response.count,\n        totalPage: Math.ceil((response.count || 0) / st.pageState.limit) // configState.totalPage = Math.ceil(configState.data.length / st.pageState.limit) \n\n      };\n\n      _this.setState(configState);\n    };\n\n    _this.fetchData = function () {\n      // document.getElementsByClassName('rt-tbody')[0].scrollTop = 0;\n      var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n      var st = _this.state;\n\n      _this.toggleLoading(true);\n\n      var params = {\n        // page: (st.pageState.page+1),\n        // limit: st.pageState.limit,\n        search: st.pageState.search,\n        sort_id: st.pageState.sort_id || '',\n        sort_desc: !st.pageState.sort_id ? '' : (st.pageState.sort_desc || '').toString() === 'true' ? 'asc' : 'desc',\n        is_read: st.filter === 'PENDING' ? 'false' : '',\n        is_completed: st.filter === 'COMPLETED' ? 'true' : st.filter === 'PENDING' ? 'false' : '',\n        is_cancelled: st.filter === 'CANCELLED' ? 'true' : st.filter === 'PENDING' ? 'false' : ''\n      };\n      console.log(params);\n      API.getOrders({\n        params: params\n      }).then(function (response) {\n        _this.responseGetItems(response);\n      }, function (err) {\n        _this.setState({\n          data: []\n        });\n\n        TOAST.pop({\n          message: err.message,\n          type: 'error'\n        });\n      }).finally(function () {\n        _this.setState({\n          searchLoading: false,\n          apiParams: params\n        });\n      });\n    };\n\n    _this.handleSearch = function (e) {\n      var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n      var st = _this.state;\n      e.preventDefault();\n      Helpers.handlePage(that, {\n        page: 0,\n        limit: st.pageState.limit,\n        search: st.query,\n        sort_id: st.pageState.sort_id,\n        sort_desc: !!st.pageState.sort_desc\n      });\n    };\n\n    _this.toggleLoading = function (flag) {\n      _this.setState(function (oldState) {\n        return {\n          searchLoading: flag\n        };\n      });\n    };\n\n    _this.toggleButton = function (path) {\n      _this.props.history.push(path);\n    };\n\n    _this.componentDidMount = function () {\n      Helpers.callBackMessageToastPop();\n\n      _this.setState({\n        searchLoading: true,\n        mounted: true,\n        checkData: [],\n        data: []\n      }, function () {\n        _this.fetchData();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Products, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      var _this2 = this;\n\n      var st = this.state;\n      var filters_array = Helpers.objectToArray(st.pageState.filter, true) || [];\n      this.setState({\n        showAdvancedSearch: filters_array.length > 0\n      });\n\n      if (typeof st.mounted !== 'undefined') {\n        var pageQs = qs.parse(this.props.history.location.search);\n        this.setState({\n          pageState: {\n            page: parseInt(pageQs.page || 0) > 0 ? parseInt(pageQs.page || 0) - 1 : 0,\n            limit: parseInt(pageQs.limit || 10),\n            search: st.query,\n            sort_id: pageQs.sort_id || st.pageState.sort_id,\n            sort_desc: !!pageQs.sort_desc\n          }\n        }, function () {\n          _this2.fetchData();\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState({\n        checkData: [],\n        data: []\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var that = this;\n      var st = this.state;\n      var original = st.selected || {}; // st.data = st.data.map(d=> ({ ...d, check: st.checkData.filter(cData=>d.id===cData.id).length > 0 }))\n      // st.columns = [\n      //     ...this.prevColumn,\n      // ]\n\n      var messages = st.data.map(function (message, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          style: {\n            background: 'white',\n            padding: '10px',\n            border: '2px solid #014401',\n            borderRadius: '5px',\n            marginBottom: '10px',\n            cursor: 'pointer'\n          },\n          onClick: function onClick() {\n            return _this3.props.history.push(\"order/\".concat(message.id));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: message.is_read ? {\n            marginBottom: '2px'\n          } : {\n            marginBottom: '2px',\n            fontSize: '18px',\n            fontWeight: '700'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }, message.is_read ? '' : React.createElement(\"span\", {\n          style: {\n            fontWeight: '400',\n            fontSize: '14px',\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        }, \"*\"), message.first_name, \" \", message.last_name, React.createElement(\"span\", {\n          style: {\n            fontSize: '12px',\n            color: 'gray',\n            float: 'right'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }, \" (\", moment(message.created).format('MMM DD YYYY'), \")\")), React.createElement(\"div\", {\n          style: {\n            fontSize: '12px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, \"(\".concat(gDp(message, 'phone_number', ''), \")\")), React.createElement(\"div\", {\n          style: {\n            borderBottom: '1px solid #014401',\n            fontSize: '12px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }, \"\".concat(gDp(message, 'email', '')), React.createElement(\"span\", {\n          style: {\n            fontSize: '12px',\n            color: 'gray',\n            float: 'right'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, \"Status: \", !message.is_read ? 'Pending' : message.is_completed ? 'Completed' : 'Processing')), React.createElement(\"div\", {\n          style: message.is_read ? {} : {\n            fontSize: '16px',\n            fontWeight: '700'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        }, \"- \", message.message));\n      });\n      return React.createElement(\"div\", {\n        style: {\n          margin: '0 2.5% 15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pad-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"margin-bottom-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        className: \"margin-bottom-sm\",\n        style: {\n          marginBottom: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        query: st.query,\n        placeholder: 'Search Order',\n        loading: st.searchLoading,\n        didSearch: this.handleSearch,\n        onChangeQuery: function onChangeQuery(e) {\n          _this3.setState({\n            query: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      })), React.createElement(Col, {\n        className: \"margin-bottom-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginBottom: '10px',\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          position: 'absolute',\n          bottom: '5px',\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"Filter by:\"), React.createElement(Input, {\n        style: {\n          maxWidth: '150px',\n          marginLeft: '70px',\n          padding: '5px'\n        },\n        type: \"select\",\n        name: \"filter\",\n        value: this.state.filter,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            filter: e.target.value\n          }, function () {\n            return _this3.fetchData();\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"ALL\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"PENDING\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"COMPLETED\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \"CANCELLED\"))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(ReactTable, Object.assign({}, _objectSpread({}, Helpers.reactTableDefault({\n        st: st,\n        that: that\n      })), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      })))))), React.createElement(ConfirmModal, {\n        size: \"sm\",\n        takeAction: function takeAction() {\n          return _this3.deleteUser(st.confirmUser);\n        },\n        isOpen: st.isItemModalOpen,\n        isConfirmClick: st.isConfirmClick,\n        error: st.errorDelete,\n        itemData: original,\n        modalTitle: 'Delete User',\n        modalBody: React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }, \"Are you sure you want to delete user \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }, st.confirmUser.username), \" ?\"),\n        onDeleteItem: this.fetchData,\n        toggle: function toggle() {\n          _this3.changeKeyValue(\"isItemModalOpen\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      })), React.createElement(Loader, {\n        message: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376\n          },\n          __self: this\n        }, \"Loading...\")),\n        isLoading: st.isLoading || false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Products;\n}(Component);\n\nexport default withRouter(Products);","map":{"version":3,"sources":["/home/cdi_5/Downloads/agri_thesis_front/src/components/Orders.js"],"names":["React","Component","withRouter","NavLink","Row","Col","Button","Input","ReactTable","API","Session","Helpers","lS","DefaultState","TOAST","OPTIONS","gDp","DATE_FORMAT","SearchBar","ConfirmModal","background","FaTrashAlt","FaEdit","FaCheck","FaTimes","Loader","moment","require","qs","Products","urlSearch","parse","props","history","location","search","state","data","query","confirmUser","username","filter","pageState","page","parseInt","limit","sort_id","sort_desc","columns","Header","headerClassName","accessor","Cell","row","handleDisplay","value","original","last_name","first_name","sortable","is_cancelled","is_completed","is_read","marginBottom","e","console","log","newData","map","dataRow","index","code","target","setState","float","updateOrder","display","width","cancelOrder","completeOrder","prevColumn","body","id","then","response","pop","message","err","type","fetchData","selectActionToggled","item","itemData","responseGetItems","st","configState","total","count","totalPage","Math","ceil","that","toggleLoading","params","toString","getOrders","finally","searchLoading","apiParams","handleSearch","preventDefault","handlePage","flag","oldState","toggleButton","path","push","componentDidMount","callBackMessageToastPop","mounted","checkData","newProps","filters_array","objectToArray","showAdvancedSearch","length","pageQs","selected","messages","padding","border","borderRadius","cursor","fontSize","fontWeight","color","created","format","borderBottom","margin","position","bottom","maxWidth","marginLeft","reactTableDefault","deleteUser","isItemModalOpen","isConfirmClick","errorDelete","changeKeyValue","isLoading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter, NavLink } from 'react-router-dom' \nimport { Row, Col, Button, Input } from 'reactstrap'\nimport ReactTable from 'react-table'\n\nimport * as API from '../services/API'\nimport * as Session from '../services/session'\n\nimport { Helpers, lS, DefaultState, TOAST, OPTIONS, gDp, DATE_FORMAT  } from '../helpers/helpers'\n\nimport SearchBar from './SearchBar.js'\nimport ConfirmModal from '../modals/ConfirmModal'\n\nimport background from '../pic/photo.jpg';\nimport {FaTrashAlt, FaEdit, FaCheck, FaTimes} from 'react-icons/fa/'\nimport Loader from './Loader'\nconst moment = require('moment');\n\nconst qs = require('query-string');\n\n// React table ref: https://react-table.js.org/#/story/readme\n\nclass Products extends Component {\n    urlSearch = qs.parse(this.props.history.location.search)\n    state = {\n        data: [],\n        query: this.urlSearch.search || '',\n        confirmUser: {username: ''},\n        filter: 'ALL',\n        pageState: {\n            page: (parseInt(this.urlSearch.page || 0) > 0 ? (parseInt(this.urlSearch.page || 0) - 1 ) : 0),\n            limit: parseInt(this.urlSearch.limit || 10),\n            sort_id: this.urlSearch.sort_id || 'created',\n            sort_desc: this.urlSearch.sort_desc || 'desc',\n            search: this.urlSearch.search || '',\n        },\n        columns: [\n            {\n                Header: \"Product\",\n                headerClassName: 'text-left',\n                accessor: \"product_name\",\n                Cell: row=> Helpers.handleDisplay(row.value)\n            },\n            \n            // {\n            //     Header: \"Status\",\n            //     headerClassName: 'text-left',\n            //     accessor: \"status\",\n            //     Cell: row=> Helpers.handleDisplay(row.value)\n            // },\n            \n            {\n                Header: \"Name\",\n                headerClassName: 'text-left',\n                accessor: \"last_name\",\n                Cell: row=> Helpers.handleDisplay(((row.original.last_name) ? (row.original.last_name+', ') : '') + row.original.first_name || '')\n            }, \n            {\n                Header: \"Address\",\n                headerClassName: 'text-left',\n                accessor: \"address\",\n                Cell: row=> Helpers.handleDisplay(row.value)\n            },\n            {\n                Header: \"Mobile No.\",\n                headerClassName: 'text-left',\n                accessor: \"phone_number\",\n                Cell: row=> Helpers.handleDisplay(row.value)\n            },\n            {\n                Header: \"Email Address\",\n                headerClassName: 'text-left',\n                accessor: \"email\",\n                Cell: row=> Helpers.handleDisplay(row.value)\n            },\n            // {\n            //     Header: \"Quantity\",\n            //     headerClassName: 'text-left',\n            //     accessor: \"quantity\",\n            //     Cell: row=> Helpers.handleDisplay(row.value)\n            // },\n            {\n                Header: \"Quantity\",\n                headerClassName: 'text-left',\n                accessor: \"quantity\",\n                Cell: row=> Helpers.handleDisplay(row.value)\n            },\n            {\n                Header: \"Status\",\n                headerClassName: 'text-left',\n                accessor: \"_status\",\n                sortable: false,\n                Cell: row=> Helpers.handleDisplay(row.original.is_cancelled ? 'Cancelled' : row.original.is_completed ? 'Completed' : !row.original.is_read ? 'Pending' : 'Processing')\n            },\n            // {\n            //     Header: \"Action\",\n            //     headerClassName: 'text-left',\n            //     accessor: \"email\",\n            //     Cell: row=> Helpers.handleDisplay(row.value)\n            // },\n            // {\n            //     Header: \"Total Cost\",\n            //     headerClassName: 'text-left',\n            //     accessor: \"total_cost\",\n            //     Cell: row=> Helpers.handleDisplay(row.value)\n            // },\n            // {\n            //     Header: \"Tracking No.\",\n            //     headerClassName: 'text-left',\n            //     accessor: \"tracking_no\",\n            //     Cell: row=> Helpers.handleDisplay(row.value)\n            // },\n            {\n                Header: \"Total Price\",\n                headerClassName: 'text-left',\n                accessor: \"total_item\",\n                Cell: row=> Helpers.handleDisplay(row.value)\n            },\n            {\n                Header: \"Tracking Number\",\n                headerClassName: 'text-left',\n                accessor: \"code\",\n                Cell: row=> <div>\n                        <Input \n                            // className=\"input-sip form-control-sm-font-size input-sm input-height-xsm input-text-sm-pd talign-right\"\n                            type=\"text\"\n                            value={row.value||''}\n                            style={{marginBottom:'5px'}}\n                            onChange={(e)=>{\n                                console.log(e)\n                                const newData = this.state.data.map((dataRow, index)=>{\n                                    if(index === row.index){\n                                        return {...dataRow, code: e.target.value}\n                                    } else {\n                                        return {...dataRow}\n                                    }\n                                })\n                                this.setState({data: newData})\n                            }}\n                        />\n                        <Button color=\"primary\" style={{float: 'right'}} onClick={()=>{this.updateOrder(row)}}><FaEdit/> Edit</Button>\n                        {/* {Helpers.handleDisplay(row.value)} */}\n                    </div>\n            },\n            {\n                Header: \"Action\",\n                headerClassName: 'text-left',\n                accessor: \"_actions\",\n                Cell: row=> {\n                    return <div>\n                        <Button color=\"danger\" style={{marginBottom: '5px', display: 'block', width: '100%'}} onClick={()=> this.cancelOrder(row)}><FaTimes/> Cancel</Button>\n                        <Button color=\"success\" style={{width: '100%'}} onClick={()=> this.completeOrder(row)}><FaCheck/> Complete</Button>\n                    </div>\n                }\n            },\n        ],\n    }\n\n    prevColumn = this.state.columns || {}\n\n    updateOrder = (row)=>{\n        const body={\n            code: row.value\n        }\n        API.updateOrder(body,row.original.id)\n        .then((response)=>{\n            TOAST.pop({message: \"Sucessfully updated order\"})\n        }, err=> {\n            TOAST.pop({message: err.message, type: \"error\"})\n        })\n    }\n\n    cancelOrder = (row)=>{\n        API.cancelOrder(row.original.id)\n        .then((response)=>{\n            TOAST.pop({message: \"Sucessfully cancelled order\"})\n            this.fetchData()\n        }, err=> {\n            TOAST.pop({message: err.message, type: \"error\"})\n        })\n    }\n\n\n    completeOrder = (row)=>{\n        API.completeOrder(row.original.id)\n        .then((response)=>{\n            TOAST.pop({message: \"Sucessfully completed order\"})\n            this.fetchData()\n        }, err=> {\n            TOAST.pop({message: err.message, type: \"error\"})\n        })\n    }\n\n    selectActionToggled = (item) => {\n        this.setState({\n            itemData: item\n        })\n    }\n\n    responseGetItems = (response) => { \n        const st = this.state\n        response = response || {data:[]}\n        response.data = response.data || []\n        let configState = {\n            data: response.data,\n            total: response.count,\n            totalPage: Math.ceil( (response.count || 0) / st.pageState.limit) \n        }\n        // configState.totalPage = Math.ceil(configState.data.length / st.pageState.limit) \n        this.setState(configState)\n    }\n\n    fetchData = () => {\n\n        // document.getElementsByClassName('rt-tbody')[0].scrollTop = 0;\n        const that = this;\n        const st = this.state\n        this.toggleLoading(true)\n        const params = { \n            // page: (st.pageState.page+1),\n            // limit: st.pageState.limit,\n            search: st.pageState.search,\n            sort_id: st.pageState.sort_id || '',\n            sort_desc: (!st.pageState.sort_id) ? '' :\n                       (st.pageState.sort_desc || '').toString() === 'true' ? 'asc' : 'desc',\n            is_read: st.filter === 'PENDING' ? 'false' : '',\n            is_completed: st.filter === 'COMPLETED' ? 'true' : st.filter === 'PENDING' ? 'false' : '',\n            is_cancelled: st.filter === 'CANCELLED' ? 'true' : st.filter === 'PENDING' ? 'false' : ''\n        }\n        console.log(params)\n        API.getOrders({params})\n            .then(response => { \n                this.responseGetItems(response) \n            }, err=> {\n                this.setState({data:[]});\n                TOAST.pop({message: err.message, type: 'error'})\n            }).finally(()=>{\n                this.setState({ searchLoading: false, apiParams: params })\n            })\n    }\n\n    handleSearch = (e) => {\n        const that = this;\n        const st = this.state\n        e.preventDefault()\n        Helpers.handlePage(that, {page: 0, limit: st.pageState.limit, search: st.query, sort_id: st.pageState.sort_id, sort_desc: !!st.pageState.sort_desc })\n    }\n\n    toggleLoading = (flag) => {\n        this.setState(oldState => ({searchLoading: flag}))\n    }\n    toggleButton = (path) => {\n        this.props.history.push(path)\n    }\n\n    componentDidMount = () => {\n        Helpers.callBackMessageToastPop() \n        this.setState({searchLoading: true, mounted: true, checkData:[], data:[]},()=>{\n            this.fetchData()\n        })\n    }\n\n    componentWillReceiveProps(newProps) {\n        const st = this.state\n        const filters_array = Helpers.objectToArray(st.pageState.filter, true) || []\n        this.setState({showAdvancedSearch: filters_array.length > 0 })\n        if ( typeof st.mounted !== 'undefined') {\n            let pageQs = qs.parse(this.props.history.location.search)\n            this.setState({\n                pageState: {\n                    page: parseInt(pageQs.page || 0) > 0 ? ( parseInt(pageQs.page || 0) - 1): 0,\n                    limit: parseInt(pageQs.limit || 10),\n                    search: st.query,\n                    sort_id: pageQs.sort_id || st.pageState.sort_id,\n                    sort_desc: !!pageQs.sort_desc,\n                } \n            },()=>{\n                this.fetchData();\n            })\n        }\n    } \n\n    componentWillUnmount() {\n        this.setState({checkData: [], data: [] })\n    }\n\n    render() {\n        const that = this\n        const st=this.state;\n        const original = st.selected || {}\n        // st.data = st.data.map(d=> ({ ...d, check: st.checkData.filter(cData=>d.id===cData.id).length > 0 }))\n        // st.columns = [\n        //     ...this.prevColumn,\n        // ]\n        const messages = st.data.map((message, index)=> \n            <div key={index} style={{ background: 'white', padding: '10px', border: '2px solid #014401', borderRadius: '5px', marginBottom: '10px', cursor: 'pointer'}} onClick={()=>this.props.history.push(`order/${message.id}`)}>\n                <div style={message.is_read ? {marginBottom: '2px'} : {marginBottom: '2px', fontSize: '18px', fontWeight: '700'}}>\n                    {message.is_read ? '' : <span style={{fontWeight: '400', fontSize: '14px', color: 'red'}}>*</span>} \n                    {message.first_name} {message.last_name} \n                    {<span style={{fontSize: '12px', color: 'gray', float: 'right'}}> ({moment(message.created).format('MMM DD YYYY')})</span>}\n                </div>\n                <div style={{fontSize: '12px'}}>{`(${gDp(message,'phone_number','')})`}</div>\n                <div style={{borderBottom: '1px solid #014401', fontSize: '12px'}}>\n                    {`${gDp(message,'email','')}`}\n                    {<span style={{fontSize: '12px', color: 'gray', float: 'right'}}>Status: {!message.is_read ? 'Pending' : message.is_completed ? 'Completed' : 'Processing'}</span>}\n                </div>\n                <div style={message.is_read ? {} : {fontSize: '16px', fontWeight: '700'}}>- {message.message}</div>\n            </div>)\n        return (\n            <div style={{margin: '0 2.5% 15px'}}> \n                <div className=\"pad-md\">\n                    <Row>\n                        <Col className=\"margin-bottom-md\">\n                            <Row>\n                                <Col md=\"3\" className=\"margin-bottom-sm\"  style={{marginBottom: '10px'}}>\n                                    <SearchBar\n                                        query={st.query}\n                                        placeholder={'Search Order'}\n                                        loading={st.searchLoading}\n                                        didSearch={this.handleSearch}\n                                        onChangeQuery={(e) => {this.setState({query: e.target.value})}}\n                                    />  \n                                </Col>\n                                <Col className=\"margin-bottom-md\">\n                                    <div style={{marginBottom: '10px', position: 'relative'}}>\n                                        <span style={{position: 'absolute', bottom: '5px', color: 'white'}}>Filter by:</span> \n                                        <Input style={{maxWidth: '150px', marginLeft: '70px', padding: '5px'}} type=\"select\" name=\"filter\" value={this.state.filter} onChange={(e)=>this.setState({filter: e.target.value},()=> this.fetchData())}>\n                                            <option>ALL</option>\n                                            <option>PENDING</option>\n                                            {/* <option>PROCESSING</option> */}\n                                            <option>COMPLETED</option>\n                                            <option>CANCELLED</option>\n                                        </Input>\n                                    </div>\n                                    {/* <hr style={{color: 'rgb(150,150,150,0.5)'}}/>\n                                    {messages} */}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <ReactTable\n                                        {...{\n                                            ...Helpers.reactTableDefault({st, that: that}),\n                                            // className: 'orders'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                    \n                    \n                    <ConfirmModal\n                        size=\"sm\"\n                        takeAction={()=>this.deleteUser(st.confirmUser)}\n                        isOpen={st.isItemModalOpen}\n                        isConfirmClick={st.isConfirmClick}\n                        error={st.errorDelete}\n                        itemData={original}\n                        modalTitle={'Delete User'}\n                        modalBody={ \n                            <p>Are you sure you want to delete user <strong>{st.confirmUser.username}</strong> ?</p>\n                        }\n                        onDeleteItem={this.fetchData}\n                        toggle={\n                            () => {\n                                this.changeKeyValue(\"isItemModalOpen\")\n                            }\n                        }\n                    />\n                </div>\n                <Loader\n                    message={(\n                        <div>\n                            {/* <h4>Fetching reports</h4> */}\n                            <p>Loading...</p>\n                        </div>\n                    )}\n                    isLoading={st.isLoading || false}\n                />\n            </div>\n        ) ;\n    }\n}\n\nexport default withRouter(Products);"]},"metadata":{},"sourceType":"module"}
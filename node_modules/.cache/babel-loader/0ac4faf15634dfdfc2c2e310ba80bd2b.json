{"ast":null,"code":"import _objectSpread from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/cdi_5/Downloads/agri_thesis_front/src/components/Reports.js\";\nimport React, { Component } from 'react';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport { Row, Col, Button } from 'reactstrap';\nimport { TOAST, DATE, gDp } from '../helpers/helpers';\nimport * as API from '../services/API';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport moment from 'moment';\nimport Loader from './Loader';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { FaCalendar } from 'react-icons/fa/';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nvar month = new Array();\nmonth[0] = \"January\";\nmonth[1] = \"February\";\nmonth[2] = \"March\";\nmonth[3] = \"April\";\nmonth[4] = \"May\";\nmonth[5] = \"June\";\nmonth[6] = \"July\";\nmonth[7] = \"August\";\nmonth[8] = \"September\";\nmonth[9] = \"October\";\nmonth[10] = \"November\";\nmonth[11] = \"December\";\n\nvar qs = require('query-string');\n\nvar AxisLabel = function AxisLabel(_ref) {\n  var axisType = _ref.axisType,\n      x = _ref.x,\n      y = _ref.y,\n      width = _ref.width,\n      height = _ref.height,\n      stroke = _ref.stroke,\n      children = _ref.children;\n  var isVert = axisType === 'yAxis';\n  var cx = isVert ? x : x + width / 2;\n  var cy = isVert ? height / 2 + y : y + height + 10;\n  var rot = isVert ? \"270 \".concat(cx, \" \").concat(cy) : 0;\n  return React.createElement(\"text\", {\n    x: cx,\n    y: cy,\n    transform: \"rotate(\".concat(rot, \")\"),\n    textAnchor: \"middle\",\n    stroke: stroke,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, children);\n};\n\nvar Reports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Reports, _Component);\n\n  function Reports() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Reports);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Reports)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.urlSearch = qs.parse(_this.props.history.location.search);\n    _this.state = {\n      data: [],\n      report: [],\n      isLoading: true,\n      average_report: [],\n      report_name: '',\n      pageState: {\n        start_date: _this.urlSearch.start_date,\n        end_date: _this.urlSearch.end_date\n      }\n    };\n\n    _this.fetchData = function (id) {\n      var is_average = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (id) {\n        _this.getReport(id);\n      } else if (_this.props.apiRoute === 'getAnnualReport') {\n        _this.getAnnual();\n      } else {\n        _this.getAverage();\n      }\n    };\n\n    _this.getReport = function (id) {\n      var st = _this.state;\n\n      _this.setState({\n        isLoading: true\n      });\n\n      var params = {\n        start_date: st.pageState.start_date || '',\n        end_date: st.pageState.end_date || ''\n      };\n      !st.pageState.start_date && delete params.start_date;\n      !st.pageState.end_date && delete params.end_date;\n      API.getReport(params, id).then(function (response) {\n        _this.setState({\n          report: response.data,\n          rawData: response.data\n        });\n      }, function (err) {\n        TOAST.pop({\n          report: [],\n          message: err.message,\n          type: 'error'\n        });\n      }).finally(function () {\n        return _this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    _this.getAnnual = function () {\n      var st = _this.state;\n\n      _this.setState({\n        isLoading: true\n      });\n\n      API.getAnnualReport().then(function (response) {\n        var report = response.data.map(function (months) {\n          return _objectSpread({}, months, {\n            Month: month[months.Month - 1]\n          });\n        });\n\n        _this.setState({\n          annual_report: report\n        });\n      }, function (err) {\n        TOAST.pop({\n          annual_report: [],\n          message: err.message,\n          type: 'error'\n        });\n      }).finally(function () {\n        return _this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    _this.getAverage = function () {\n      var st = _this.state;\n\n      _this.setState({\n        isLoading: true\n      });\n\n      var params = {\n        start_date: st.pageState.start_date || '',\n        end_date: st.pageState.end_date || '' // !st.pageState.start_date && delete params.start_date\n        // !st.pageState.end_date && delete params.end_date\n\n      };\n      API.getAverageReports(params).then(function (response) {\n        var report = [_objectSpread({}, response.data, {\n          fw1: response.data.avg_fw1,\n          bw1: response.data.avg_bw1,\n          fw2: response.data.avg_fw2,\n          bw2: response.data.avg_bw2,\n          fw3: response.data.avg_fw3,\n          bw3: response.data.avg_bw3,\n          fw4: response.data.avg_fw4,\n          bw4: response.data.avg_bw4,\n          fw5: response.data.avg_fw5,\n          bw5: response.data.avg_bw5,\n          fw6: response.data.avg_fw6,\n          bw6: response.data.avg_bw6,\n          fw7: response.data.avg_fw7,\n          bw7: response.data.avg_bw7,\n          fw8: response.data.avg_fw8,\n          bw8: response.data.avg_bw8\n        })];\n\n        _this.setState({\n          report: report\n        });\n      }, function (err) {\n        TOAST.pop({\n          report: [],\n          message: err.message,\n          type: 'error'\n        });\n      }).finally(function () {\n        return _this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    _this.componentDidMount = function () {\n      var id = _this.props.match.params.id;\n\n      _this.setState({\n        isLoading: true\n      });\n\n      var params = {\n        sort_id: 'created',\n        sort_desc: 'desc'\n      };\n      API.getReports({\n        params: params\n      }).then(function (response) {\n        var newData = response.data.filter(function (report, index, self) {\n          return index === self.findIndex(function (t) {\n            return t.activity_id === report.activity_id;\n          });\n        });\n\n        _this.setState({\n          data: newData\n        }); // this.setState({data: response.data})\n\n      }, function (err) {\n        TOAST.pop({\n          message: err.message,\n          type: 'error'\n        });\n      }).finally(function () {\n        _this.setState({\n          isLoading: false\n        });\n\n        _this.fetchData(id);\n      });\n    };\n\n    _this.componentWillReceiveProps = function (newProps) {\n      var id = newProps.match.params.id;\n      console.log(newProps);\n\n      _this.setState({\n        isLoading: true\n      });\n\n      if (newProps.location.pathname === '/reports') {\n        _this.getAverage();\n      } else if (newProps.location.pathname === '/report/annual') {\n        _this.getAnnual();\n      } else {\n        _this.getReport(id);\n      }\n    };\n\n    _this.handleDateRange = function (event, picker) {\n      var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n      var st = _this.state;\n      var id = _this.props.match.params.id;\n\n      _this.setState({\n        pageState: {\n          start_date: picker.startDate.format(DATE.DATE_DASH),\n          end_date: picker.endDate.format(DATE.DATE_DASH)\n        }\n      }, function () {\n        _this.props.history.push(\"?start_date=\".concat(picker.startDate.format(DATE.DATE_DASH), \"&end_date=\").concat(picker.endDate.format(DATE.DATE_DASH)));\n\n        if (id) {\n          _this.fetchData(id, picker.startDate.format(DATE.DATE_DASH));\n        } else {\n          _this.fetchData('', true);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Reports, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var st = this.state;\n      var pr = this.props;\n      var id = this.props.match.params.id;\n      var startDate = gDp(st.pageState, 'start_date') ? moment(gDp(st.pageState, 'start_date'), DATE.DATE_DASH) : '';\n      var endDate = gDp(st.pageState, 'end_date') ? moment(gDp(st.pageState, 'end_date'), DATE.DATE_DASH) : '';\n      var emptyDateCond = startDate === '' && endDate === '';\n      var is_annual = !!this.props.apiRoute;\n      var newParams = st.pageState.start_date ? \"?start_date=\".concat(st.pageState.start_date, \"&end_date=\").concat(st.pageState.end_date) : '';\n      var reports = [];\n      st.data.map(function (report, pos) {\n        return reports.push(React.createElement(Button, {\n          key: report.id,\n          color: id === report.activity_id ? \"primary\" : \"secondary\",\n          style: {\n            width: '100%',\n            marginBottom: '5px'\n          },\n          onClick: function onClick() {\n            console.log(report);\n\n            _this2.setState({\n              report_name: report.name\n            });\n\n            pr.history.push(\"/report/\".concat(report.activity_id).concat(newParams));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, report.name));\n      });\n      var data = st.report.length ? [{\n        name: 'T1',\n        fw: st.report[0].fw1,\n        bw: st.report[0].bw1\n      }, {\n        name: 'T2',\n        fw: st.report[0].fw2,\n        bw: st.report[0].bw2\n      }, {\n        name: 'T3',\n        fw: st.report[0].fw3,\n        bw: st.report[0].bw3\n      }, {\n        name: 'T4',\n        fw: st.report[0].fw4,\n        bw: st.report[0].bw4\n      }, {\n        name: 'T5',\n        fw: st.report[0].fw5,\n        bw: st.report[0].bw5\n      }, {\n        name: 'T6',\n        fw: st.report[0].fw6,\n        bw: st.report[0].bw6\n      }, {\n        name: 'T7',\n        fw: st.report[0].fw7,\n        bw: st.report[0].bw7\n      }, {\n        name: 'T8',\n        fw: st.report[0].fw8,\n        bw: st.report[0].bw8\n      }] : '';\n      var params = st.pageState.start_date ? \"?start_date=\".concat(st.pageState.start_date, \"&end_date=\").concat(st.pageState.end_date) : '';\n      var date = new Date();\n      var year = date.getFullYear();\n      var Month = date.getMonth();\n      var selections = {};\n\n      for (var a = 0; a <= Month; a++) {\n        var lastDay = moment(new Date(date.getFullYear(), month[a + 1], 0)).format('DD');\n        selections[month[a]] = [moment().subtract(Month - a, 'month').startOf('month'), moment().subtract(Month - a, 'month').endOf('month')];\n      }\n\n      console.log(st.annual_report, selections, month, month[0], Month);\n      var report_name = pr.location.pathname === '/reports' ? 'Average' : pr.location.pathname === '/report/annual' ? 'Annual' : st.report_name;\n      return React.createElement(\"div\", {\n        style: {\n          margin: '0 2% 15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        md: \"2\",\n        style: {\n          overflowY: 'auto',\n          background: 'white',\n          marginBottom: '10px',\n          border: '2px solid #014401',\n          borderRadius: '5px',\n          paddingTop: '10px'\n        },\n        className: \"report-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: !id && pr.apiRoute ? \"primary\" : \"secondary\",\n        style: {\n          width: '100%',\n          marginBottom: '5px'\n        },\n        onClick: function onClick() {\n          return pr.history.push(\"/report/annual\".concat(newParams));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Annual Report\"), React.createElement(Button, {\n        color: !id && !pr.apiRoute ? \"primary\" : \"secondary\",\n        style: {\n          width: '100%',\n          marginBottom: '5px'\n        },\n        onClick: function onClick() {\n          return pr.history.push(\"/reports\".concat(newParams));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Average Report\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Select Report: \"), reports), React.createElement(Col, {\n        sm: \"12\",\n        md: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        md: \"4\",\n        lg: \"3\",\n        style: {\n          padding: '0',\n          marginBottom: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, !pr.apiRoute && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"react-date-range-picker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(DateRangePicker // opens=\"left\"\n      , Object.assign({}, startDate ? {\n        startDate: startDate\n      } : {}, endDate ? {\n        endDate: endDate\n      } : {}, {\n        ranges: selections,\n        onApply: this.handleDateRange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"button\",\n        className: \"pad-0 react-date-range-input\",\n        size: \"sm\",\n        color: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"btn-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(FaCalendar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), \"\\xA0\"), emptyDateCond ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"All\") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"\".concat(startDate.format(\"MMMM\")))))))))), React.createElement(Col, {\n        align: \"right\",\n        style: {\n          paddingRight: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"success\",\n        style: pr.apiRoute ? {\n          padding: '0 30px',\n          marginBottom: '10px'\n        } : {\n          padding: '0 30px'\n        },\n        onClick: function onClick() {\n          return window.open(\"/report/print/\".concat(id ? id : pr.apiRoute ? 'annual' : 'average').concat(params));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"Print Report\"))), React.createElement(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '20px',\n          width: '100%',\n          fontWeight: 'bold'\n        },\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, report_name === 'Annual' ? \"Annual report for the year of \".concat(startDate.format(\"YYYY\")) : report_name === 'Average' ? \"\".concat(report_name, \" report for the month of \").concat(startDate.format(\"MMMM\")) : \"\".concat(report_name, \" report\")), is_annual ? React.createElement(ResponsiveContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(BarChart // width={800}\n      // height={300}\n      , {\n        data: st.annual_report,\n        margin: {\n          top: 30,\n          right: 15,\n          left: 5,\n          bottom: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"Month\",\n        tickSize: true,\n        dy: \"25\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        label: {\n          value: 'Average Weight',\n          angle: -90,\n          position: 'insideLeft'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }), React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        name: \"Fresh Weight Test\",\n        dataKey: \"avg_fw\",\n        fill: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        name: \"Dry Weight Test\",\n        dataKey: \"avg_bw\",\n        fill: \"#8884d8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }))) : React.createElement(ResponsiveContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(BarChart // width={800}\n      // height={300}\n      , {\n        data: data,\n        margin: {\n          top: 30,\n          right: 15,\n          left: 25,\n          bottom: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"name\",\n        tickSize: true,\n        dy: \"25\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        label: {\n          value: 'Average Weight',\n          angle: -90,\n          position: 'insideLeft'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }), React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        name: \"Fresh Weight Test\",\n        dataKey: \"fw\",\n        fill: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        name: \"Dry Weight Test\",\n        dataKey: \"bw\",\n        fill: \"#8884d8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }))))), id && React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, ['', 'R1', 'R2', 'R3', 'AVERAGE'].map(function (head) {\n        return React.createElement(\"th\", {\n          key: head,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370\n          },\n          __self: this\n        }, head);\n      }))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, \"T1\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, st.rawData.fw_test[0][0]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, st.rawData.fw_test[1][0]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, st.rawData.fw_test[2][0]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, st.rawData.average[0])), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, \"T2\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, st.rawData.fw_test[0][1]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, st.rawData.fw_test[1][1]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, st.rawData.fw_test[2][1]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, st.rawData.average[1])), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, \"T3\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, st.rawData.fw_test[0][2]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, st.rawData.fw_test[1][2]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, st.rawData.fw_test[2][2]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, st.rawData.average[2])), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, \"T4\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, st.rawData.fw_test[0][3]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, st.rawData.fw_test[1][3]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, st.rawData.fw_test[2][3]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, st.rawData.average[3])), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, \"T5\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, st.rawData.fw_test[0][4]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, st.rawData.fw_test[1][4]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, st.rawData.fw_test[2][4]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, st.rawData.average[4])), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, \"T6\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, st.rawData.fw_test[0][5]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, st.rawData.fw_test[1][5]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, st.rawData.fw_test[2][5]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, st.rawData.average[5])), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, \"T7\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, st.rawData.fw_test[0][6]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, st.rawData.fw_test[1][6]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, st.rawData.fw_test[2][6]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, st.rawData.average[6])), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, \"T8\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, st.rawData.fw_test[0][7]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, st.rawData.fw_test[1][7]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, st.rawData.fw_test[2][7]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, st.rawData.average[7])))))), React.createElement(Loader, {\n        message: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439\n          },\n          __self: this\n        }, \"Loading...\")),\n        isLoading: st.isLoading || false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Reports;\n}(Component);\n\nexport default withRouter(Reports);","map":{"version":3,"sources":["/home/cdi_5/Downloads/agri_thesis_front/src/components/Reports.js"],"names":["React","Component","withRouter","NavLink","Row","Col","Button","TOAST","DATE","gDp","API","DateRangePicker","moment","Loader","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","FaCalendar","month","Array","qs","require","AxisLabel","axisType","x","y","width","height","stroke","children","isVert","cx","cy","rot","Reports","urlSearch","parse","props","history","location","search","state","data","report","isLoading","average_report","report_name","pageState","start_date","end_date","fetchData","id","is_average","getReport","apiRoute","getAnnual","getAverage","st","setState","params","then","response","rawData","err","pop","message","type","finally","getAnnualReport","map","months","Month","annual_report","getAverageReports","fw1","avg_fw1","bw1","avg_bw1","fw2","avg_fw2","bw2","avg_bw2","fw3","avg_fw3","bw3","avg_bw3","fw4","avg_fw4","bw4","avg_bw4","fw5","avg_fw5","bw5","avg_bw5","fw6","avg_fw6","bw6","avg_bw6","fw7","avg_fw7","bw7","avg_bw7","fw8","avg_fw8","bw8","avg_bw8","componentDidMount","match","sort_id","sort_desc","getReports","newData","filter","index","self","findIndex","t","activity_id","componentWillReceiveProps","newProps","console","log","pathname","handleDateRange","event","picker","that","startDate","format","DATE_DASH","endDate","push","pr","emptyDateCond","is_annual","newParams","reports","pos","marginBottom","name","length","fw","bw","date","Date","year","getFullYear","getMonth","selections","a","lastDay","subtract","startOf","endOf","margin","overflowY","background","border","borderRadius","paddingTop","padding","paddingRight","window","open","position","top","fontWeight","right","left","bottom","value","angle","head","fw_test","average"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter, NavLink } from 'react-router-dom' \nimport { Row, Col, Button } from 'reactstrap'\nimport { TOAST, DATE, gDp } from '../helpers/helpers'\n\nimport * as API from '../services/API'\nimport DateRangePicker from 'react-bootstrap-daterangepicker'\nimport moment from 'moment';\nimport Loader from './Loader'\n\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\n\nimport {FaCalendar} from 'react-icons/fa/'\nimport 'bootstrap-daterangepicker/daterangepicker.css';\n\nvar month = new Array();\nmonth[0] = \"January\";\nmonth[1] = \"February\";\nmonth[2] = \"March\";\nmonth[3] = \"April\";\nmonth[4] = \"May\";\nmonth[5] = \"June\";\nmonth[6] = \"July\";\nmonth[7] = \"August\";\nmonth[8] = \"September\";\nmonth[9] = \"October\";\nmonth[10] = \"November\";\nmonth[11] = \"December\";\nconst qs = require('query-string');\n\nconst AxisLabel = ({ axisType, x, y, width, height, stroke, children }) => {\n    const isVert = axisType === 'yAxis';\n    const cx = isVert ? x : x + (width / 2);\n    const cy = isVert ? (height / 2) + y : y + height + 10;\n    const rot = isVert ? `270 ${cx} ${cy}` : 0;\n    return (\n      <text x={cx} y={cy} transform={`rotate(${rot})`} textAnchor=\"middle\" stroke={stroke}>\n        {children}\n      </text>\n    );\n  };\n\nclass Reports extends Component {\n    urlSearch = qs.parse(this.props.history.location.search)\n    state = {\n        data:[],\n        report:[],\n        isLoading: true,\n        average_report: [],\n        report_name: '',\n        pageState: {\n            start_date: this.urlSearch.start_date,\n            end_date: this.urlSearch.end_date\n        },\n    }\n\n    fetchData = (id,is_average=false) => {\n        if(id){\n            this.getReport(id)\n        } else if(this.props.apiRoute==='getAnnualReport'){\n            this.getAnnual()\n        } else {\n            this.getAverage()\n        }\n    }\n\n    getReport = (id) => {\n        const st = this.state\n        this.setState({isLoading: true})\n        const params = {\n            start_date: st.pageState.start_date || '',\n            end_date: st.pageState.end_date || ''\n        }\n        !st.pageState.start_date && delete params.start_date\n        !st.pageState.end_date && delete params.end_date\n        API.getReport(params,id)\n        .then((response)=>{\n            this.setState({report: response.data, rawData: response.data})\n        }, err => {\n            TOAST.pop({report: [], message: err.message, type: 'error'})\n        }).finally(()=> \n            this.setState({isLoading: false})\n        )\n    }\n\n    getAnnual = () => {\n        const st = this.state\n        this.setState({isLoading: true})\n        API.getAnnualReport()\n        .then((response)=>{\n            const report = response.data.map((months)=> {return {...months, Month: month[months.Month-1]}})\n            this.setState({annual_report: report})\n        }, err => {\n            TOAST.pop({annual_report:[], message: err.message, type: 'error'})\n        }).finally(()=> \n            this.setState({isLoading: false})\n        )\n    }\n\n    getAverage = () => {\n        const st = this.state\n        this.setState({isLoading: true})\n        const params = {\n            start_date: st.pageState.start_date || '',\n            end_date: st.pageState.end_date || ''\n        }\n        // !st.pageState.start_date && delete params.start_date\n        // !st.pageState.end_date && delete params.end_date\n        API.getAverageReports(params)\n        .then((response)=>{\n            const report = [{...response.data,\n                fw1: response.data.avg_fw1, bw1: response.data.avg_bw1,\n                fw2: response.data.avg_fw2, bw2: response.data.avg_bw2,\n                fw3: response.data.avg_fw3, bw3: response.data.avg_bw3,\n                fw4: response.data.avg_fw4, bw4: response.data.avg_bw4,\n                fw5: response.data.avg_fw5, bw5: response.data.avg_bw5,\n                fw6: response.data.avg_fw6, bw6: response.data.avg_bw6,\n                fw7: response.data.avg_fw7, bw7: response.data.avg_bw7,\n                fw8: response.data.avg_fw8, bw8: response.data.avg_bw8,\n            }]\n            this.setState({report: report})\n        }, err => {\n            TOAST.pop({report: [],message: err.message, type: 'error'})\n        }).finally(()=> \n            this.setState({isLoading: false})\n        )\n    }\n\n    componentDidMount = () => {\n        const {id} = this.props.match.params\n        this.setState({isLoading: true})\n        const params={\n            sort_id: 'created',\n            sort_desc: 'desc',\n        }\n        API.getReports({params})\n        .then((response)=>{\n            const newData = response.data.filter((report,index,self)=>\n                index === self.findIndex((t) => (\n                t.activity_id === report.activity_id\n              ))\n            )\n            this.setState({data: newData})\n            // this.setState({data: response.data})\n        }, err => {\n            TOAST.pop({message: err.message, type: 'error'})\n        }).finally(()=> {\n            this.setState({isLoading: false})\n            this.fetchData(id)\n        })\n    }\n\n    componentWillReceiveProps = (newProps) => {\n        const {id} = newProps.match.params\n        console.log(newProps)\n        this.setState({isLoading: true})\n        if(newProps.location.pathname==='/reports') {\n            this.getAverage()\n        } else if(newProps.location.pathname==='/report/annual') {\n            this.getAnnual()\n        } else{\n            this.getReport(id)\n        }\n    }\n\n    handleDateRange = (event, picker) => {\n        const that = this\n        const st = this.state\n        const {id} = this.props.match.params\n        this.setState({\n            pageState: {\n                start_date: picker.startDate.format(DATE.DATE_DASH),\n                end_date: picker.endDate.format(DATE.DATE_DASH)\n            }\n            },()=> {\n                this.props.history.push(`?start_date=${picker.startDate.format(DATE.DATE_DASH)}&end_date=${picker.endDate.format(DATE.DATE_DASH)}`)\n                if(id){\n                    this.fetchData(id, picker.startDate.format(DATE.DATE_DASH))\n                } else {\n                    this.fetchData('', true)\n                }\n            })\n    }\n\n    render() {\n        const st= this.state\n        const pr = this.props\n        const {id} = this.props.match.params\n        const startDate = gDp(st.pageState,'start_date') ? moment(gDp(st.pageState,'start_date'),DATE.DATE_DASH) : ''\n        const endDate = gDp(st.pageState,'end_date') ? moment(gDp(st.pageState,'end_date'),DATE.DATE_DASH) : ''\n        const emptyDateCond = startDate==='' && endDate ===''\n        const is_annual = !!this.props.apiRoute\n        const newParams = st.pageState.start_date ? `?start_date=${st.pageState.start_date}&end_date=${st.pageState.end_date}` : ''\n        const reports = []\n        st.data.map((report, pos)=> \n            reports.push(\n            <Button key={report.id} color={id===report.activity_id ? \"primary\" : \"secondary\"} style={{width: '100%', marginBottom: '5px'}}\n                onClick={()=>{\n                    console.log(report)\n                    this.setState({report_name: report.name})\n                    pr.history.push(`/report/${report.activity_id}${newParams}`)}}>\n                {report.name}\n            </Button>\n        ))\n        const data = st.report.length ? [\n            {\n                name: 'T1', fw: st.report[0].fw1, bw: st.report[0].bw1\n            },\n            {\n                name: 'T2', fw: st.report[0].fw2, bw: st.report[0].bw2\n            },\n            {\n                name: 'T3', fw: st.report[0].fw3, bw: st.report[0].bw3\n            },\n            {\n                name: 'T4', fw: st.report[0].fw4, bw: st.report[0].bw4\n            },\n            {\n                name: 'T5', fw: st.report[0].fw5, bw: st.report[0].bw5\n            },\n            {\n                name: 'T6', fw: st.report[0].fw6, bw: st.report[0].bw6\n            },\n            {\n                name: 'T7', fw: st.report[0].fw7, bw: st.report[0].bw7\n            },\n            {\n                name: 'T8', fw: st.report[0].fw8, bw: st.report[0].bw8\n            },\n        ] : ''\n\n        const params = st.pageState.start_date ? `?start_date=${st.pageState.start_date}&end_date=${st.pageState.end_date}` : ''\n        const date = new Date()\n        const year = date.getFullYear()\n        const Month = date.getMonth()\n        \n        let selections = {}\n        for(var a=0; a<=Month; a++){\n            const lastDay = moment(new Date(date.getFullYear(), month[a+1] , 0)).format('DD');\n            selections[month[a]] = [moment().subtract(Month-a, 'month').startOf('month'), moment().subtract(Month-a, 'month').endOf('month')]\n            \n        }\n        console.log(st.annual_report, selections, month, month[0], Month)\n        const report_name = pr.location.pathname==='/reports' ? 'Average' :\n                            pr.location.pathname==='/report/annual' ? 'Annual' : \n                            st.report_name\n        return (\n            <div style={{margin: '0 2% 15px'}}> \n                <Row>\n                    <Col sm=\"12\" md=\"2\" style={{overflowY:'auto', background: 'white', marginBottom: '10px', border: '2px solid #014401', borderRadius: '5px', paddingTop: '10px'}} className=\"report-buttons\">\n                        <Button color={!id && pr.apiRoute ? \"primary\" : \"secondary\"} style={{width: '100%', marginBottom: '5px'}}\n                            onClick={()=>pr.history.push(`/report/annual${newParams}`)}>\n                            Annual Report\n                        </Button>\n                        <Button color={!id && !pr.apiRoute ? \"primary\" : \"secondary\"} style={{width: '100%', marginBottom: '5px'}}\n                            onClick={()=>pr.history.push(`/reports${newParams}`)}>\n                            Average Report\n                        </Button>\n                            <div>Select Report: </div>\n                            {reports}\n                    </Col>\n                    <Col sm=\"12\" md=\"8\">\n                        <Row>\n                            <Col sm=\"12\" md=\"4\" lg=\"3\" style={{padding: '0', marginBottom: '10px'}}>\n                            {!pr.apiRoute && <div>\n                                    <div className=\"react-date-range-picker\">\n                                        <DateRangePicker\n                                            // opens=\"left\"\n                                            {...(startDate) ? {startDate} : {}}\n                                            {...(endDate) ? {endDate} : {}}\n                                            ranges={selections}\n                                            onApply={this.handleDateRange}\n                                            >\n                                            <div>\n                                                <Button type=\"button\" className=\"pad-0 react-date-range-input\" size='sm' color=\"link\">\n                                                    <i className=\"btn-icon\">\n                                                        <FaCalendar/>&nbsp;\n                                                    </i>\n                                                    {\n                                                        emptyDateCond ? (\n                                                            <span>All</span>\n                                                        ) :\n                                                        (\n                                                            <span>\n                                                                <span>{`${startDate.format(\"MMMM\")}`}</span>\n                                                            </span>\n\n                                                        )\n                                                    }\n                                                </Button>\n                                            </div>\n                                        </DateRangePicker>\n                                        {/* <Button style={{top:'-2px', right:'5px'}} size=\"sm\" className=\"form-control-sm-font-size remove\" color=\"link\" onClick={(e)=>{\n                                            this.setState({\n                                                pageState: {\n                                                    start_date: '',end_date: ''\n                                                }\n                                            })\n                                            }\n                                        }\n                                        >\n                                            <strong> X </strong>\n                                        </Button> */}\n                                    </div>\n                                </div>}\n                            </Col>\n                            <Col align=\"right\" style={{paddingRight: '0'}}>\n                                <Button color=\"success\" style={pr.apiRoute?  {padding: '0 30px', marginBottom: '10px'}:{padding: '0 30px'}} onClick={()=>window.open(`/report/print/${id? id: pr.apiRoute? 'annual': 'average'}${params}`)}>\n                                    Print Report\n                                </Button>\n                            </Col>\n                        </Row>\n                        \n                        <div style={{position:'relative'}}>\n                            <div style={{position:'absolute', top: '20px', width: '100%', fontWeight:'bold'}} align=\"center\">\n                                {report_name === 'Annual' ? `Annual report for the year of ${startDate.format(\"YYYY\")}`\n                                : report_name==='Average'? `${report_name} report for the month of ${startDate.format(\"MMMM\")}` \n                                : `${report_name} report`} \n                            </div>\n                            {is_annual ? \n\n                            <ResponsiveContainer>\n                                <BarChart\n                                    // width={800}\n                                    // height={300}\n                                    data={st.annual_report}\n                                    margin={{\n                                    top: 30, right: 15, left: 5, bottom: 15,\n                                    }}\n                                >\n                                    <XAxis dataKey=\"Month\" tickSize\n                                        dy='25'/>\n                                    <YAxis label={{ value: 'Average Weight', angle: -90, position: 'insideLeft' }}/>\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\n                                    <Tooltip />\n                                    <Legend />\n                                    <Bar name=\"Fresh Weight Test\" dataKey=\"avg_fw\" fill=\"#82ca9d\"/>\n                                    <Bar name=\"Dry Weight Test\" dataKey=\"avg_bw\" fill=\"#8884d8\"/>\n                                </BarChart>\n                            </ResponsiveContainer>:\n    \n                            <ResponsiveContainer>\n                                <BarChart\n                                    // width={800}\n                                    // height={300}\n                                    data={data}\n                                    margin={{\n                                    top: 30, right: 15, left: 25, bottom: 15,\n                                    }}\n                                >\n                                    <XAxis dataKey=\"name\" tickSize\n                                        dy='25' />\n                                    <YAxis label={{ value: 'Average Weight', angle: -90, position: 'insideLeft' }}/>\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\n                                    <Tooltip />\n                                    <Legend />\n                                    <Bar name=\"Fresh Weight Test\" dataKey=\"fw\" fill=\"#82ca9d\"/>\n                                    <Bar name=\"Dry Weight Test\" dataKey=\"bw\" fill=\"#8884d8\"/>\n                                </BarChart>\n                            </ResponsiveContainer>\n                            }\n                        </div>\n                    </Col>\n                    {id && <Col>\n                        <table style={{width:'100%'}}>\n                            <thead>\n                                <tr>\n                                    {['','R1','R2','R3','AVERAGE'].map((head)=><th key={head}>{head}</th>)}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>T1</td>\n                                    <td>{st.rawData.fw_test[0][0]}</td>\n                                    <td>{st.rawData.fw_test[1][0]}</td>\n                                    <td>{st.rawData.fw_test[2][0]}</td>\n                                    <td>{st.rawData.average[0]}</td>\n                                </tr>\n                                <tr>\n                                    <td>T2</td>\n                                    <td>{st.rawData.fw_test[0][1]}</td>\n                                    <td>{st.rawData.fw_test[1][1]}</td>\n                                    <td>{st.rawData.fw_test[2][1]}</td>\n                                    <td>{st.rawData.average[1]}</td>\n                                </tr>\n                                <tr>\n                                    <td>T3</td>\n                                    <td>{st.rawData.fw_test[0][2]}</td>\n                                    <td>{st.rawData.fw_test[1][2]}</td>\n                                    <td>{st.rawData.fw_test[2][2]}</td>\n                                    <td>{st.rawData.average[2]}</td>\n                                </tr>\n                                <tr>\n                                    <td>T4</td>\n                                    <td>{st.rawData.fw_test[0][3]}</td>\n                                    <td>{st.rawData.fw_test[1][3]}</td>\n                                    <td>{st.rawData.fw_test[2][3]}</td>\n                                    <td>{st.rawData.average[3]}</td>\n                                </tr>\n                                <tr>\n                                    <td>T5</td>\n                                    <td>{st.rawData.fw_test[0][4]}</td>\n                                    <td>{st.rawData.fw_test[1][4]}</td>\n                                    <td>{st.rawData.fw_test[2][4]}</td>\n                                    <td>{st.rawData.average[4]}</td>\n                                </tr>\n                                <tr>\n                                    <td>T6</td>\n                                    <td>{st.rawData.fw_test[0][5]}</td>\n                                    <td>{st.rawData.fw_test[1][5]}</td>\n                                    <td>{st.rawData.fw_test[2][5]}</td>\n                                    <td>{st.rawData.average[5]}</td>\n                                </tr>\n                                <tr>\n                                    <td>T7</td>\n                                    <td>{st.rawData.fw_test[0][6]}</td>\n                                    <td>{st.rawData.fw_test[1][6]}</td>\n                                    <td>{st.rawData.fw_test[2][6]}</td>\n                                    <td>{st.rawData.average[6]}</td>\n                                </tr>\n                                <tr>\n                                    <td>T8</td>\n                                    <td>{st.rawData.fw_test[0][7]}</td>\n                                    <td>{st.rawData.fw_test[1][7]}</td>\n                                    <td>{st.rawData.fw_test[2][7]}</td>\n                                    <td>{st.rawData.average[7]}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </Col>}\n                </Row>\n                \n                <Loader\n                    message={(\n                        <div>\n                            {/* <h4>Fetching reports</h4> */}\n                            <p>Loading...</p>\n                        </div>\n                    )}\n                    isLoading={st.isLoading || false}\n                />\n            </div>\n        ) ;\n    }\n}\n\nexport default withRouter(Reports);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cdi_5/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cdi_5/agri_thesis_front/src/components/PrintReport.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport * as API from '../services/API';\nimport moment from 'moment';\nimport { gDp } from '../helpers/helpers';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nvar qs = require('query-string');\n\nvar month = new Array();\nmonth[0] = \"January\";\nmonth[1] = \"February\";\nmonth[2] = \"March\";\nmonth[3] = \"April\";\nmonth[4] = \"May\";\nmonth[5] = \"June\";\nmonth[6] = \"July\";\nmonth[7] = \"August\";\nmonth[8] = \"September\";\nmonth[9] = \"October\";\nmonth[10] = \"November\";\nmonth[11] = \"December\";\n\nvar PrintReport =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PrintReport, _Component);\n\n  function PrintReport() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PrintReport);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PrintReport)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.urlSearch = qs.parse(_this.props.history.location.search);\n    _this.state = {\n      report: [],\n      annual_report: [],\n      pageState: {\n        start_date: _this.urlSearch.start_date,\n        end_date: _this.urlSearch.end_date\n      }\n    };\n\n    _this.apiRetrieve = function () {\n      var st = _this.state;\n      var id = _this.props.match.params.id;\n      var params = {\n        start_date: st.pageState.start_date || '',\n        end_date: st.pageState.end_date || ''\n      };\n      !st.pageState.start_date && delete params.start_date;\n      !st.pageState.end_date && delete params.end_date;\n      console.log('Hello');\n      API.getReport(params, id).then(function (response) {\n        _this.setState({\n          report: response.data\n        }, function () {\n          setTimeout(function () {\n            window.print();\n            setTimeout(window.close, 0);\n          }, 500);\n        });\n      }, function (err) {}).finally(function () {\n        return _this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    _this.apiAverage = function () {\n      var st = _this.state;\n      var id = _this.props.match.params.id;\n      var params = {\n        start_date: st.pageState.start_date || '',\n        end_date: st.pageState.end_date || ''\n      };\n      !st.pageState.start_date && delete params.start_date;\n      !st.pageState.end_date && delete params.end_date;\n      API.getReportAverage(params, id).then(function (response) {\n        var report = [_objectSpread({}, response.data, {\n          fw1: response.data.avg_fw1,\n          bw1: response.data.avg_bw1,\n          fw2: response.data.avg_fw2,\n          bw2: response.data.avg_bw2,\n          fw3: response.data.avg_fw3,\n          bw3: response.data.avg_bw3,\n          fw4: response.data.avg_fw4,\n          bw4: response.data.avg_bw4,\n          fw5: response.data.avg_fw5,\n          bw5: response.data.avg_bw5,\n          fw6: response.data.avg_fw6,\n          bw6: response.data.avg_bw6,\n          fw7: response.data.avg_fw7,\n          bw7: response.data.avg_bw7,\n          fw8: response.data.avg_fw8,\n          bw8: response.data.avg_bw8\n        })];\n\n        _this.setState({\n          report: report\n        }, function () {\n          setTimeout(function () {\n            window.print();\n            setTimeout(window.close, 0);\n          }, 500);\n        });\n      }, function (err) {}).finally(function () {\n        return _this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    _this.apiAnnual = function () {\n      var st = _this.state;\n\n      _this.setState({\n        isLoading: true\n      });\n\n      console.log('isAnnual');\n      API.getAnnualReport().then(function (response) {\n        var report = response.data.map(function (months) {\n          return _objectSpread({}, months, {\n            Month: month[months.Month - 1]\n          });\n        });\n\n        _this.setState({\n          annual_report: report\n        });\n      }, function (err) {// TOAST.pop({message: err.message, type: 'error'})\n      }).finally(function () {\n        return _this.setState({\n          isLoading: false\n        }, function () {\n          setTimeout(function () {\n            window.print();\n            setTimeout(window.close, 0);\n          }, 500);\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PrintReport, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var pr = this.props;\n      var id = this.props.match.params.id;\n      console.log(pr);\n      console.log(pr.location.pathname, pr.location.pathname === '/report/print/average');\n\n      if (pr.location.pathname === '/report/print/annual') {\n        this.apiAnnual();\n      } else if (pr.location.pathname === '/report/print/average') {\n        this.apiAverage();\n      } else {\n        this.apiRetrieve();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var st = this.state;\n      var data = st.report.length ? [{\n        name: 1,\n        fw: st.report[0].fw1,\n        bw: st.report[0].bw1\n      }, {\n        name: 2,\n        fw: st.report[0].fw2,\n        bw: st.report[0].bw2\n      }, {\n        name: 3,\n        fw: st.report[0].fw3,\n        bw: st.report[0].bw3\n      }, {\n        name: 4,\n        fw: st.report[0].fw4,\n        bw: st.report[0].bw4\n      }, {\n        name: 5,\n        fw: st.report[0].fw5,\n        bw: st.report[0].bw5\n      }, {\n        name: 6,\n        fw: st.report[0].fw6,\n        bw: st.report[0].bw6\n      }, {\n        name: 7,\n        fw: st.report[0].fw7,\n        bw: st.report[0].bw7\n      }, {\n        name: 8,\n        fw: st.report[0].fw8,\n        bw: st.report[0].bw8\n      }] : '';\n      var is_annual = this.props.location.pathname === '/report/print/annual';\n      console.log(st.report, this.props, st);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        style: {\n          fontSize: '24px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: '36px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, st.report.length ? st.report[0].name : st.annual_report.length ? 'Annual' : ''), \"\\xA0\", st.pageState.start_date ? \"(\".concat(moment(st.pageState.start_date).format('MMMM DD YYYY')) : '', \" \", st.pageState.end_date ? \"- \".concat(moment(st.pageState.end_date).format('MMMM DD YYYY'), \")\") : '')), is_annual ? React.createElement(ResponsiveContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(BarChart // width={800}\n      // height={300}\n      , {\n        data: st.annual_report,\n        margin: {\n          top: 30,\n          right: 15,\n          left: 5,\n          bottom: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"Month\",\n        tickSize: true,\n        dy: \"25\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"avg_fw\",\n        fill: \"#8884d8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"avg_bw\",\n        fill: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }))) : React.createElement(ResponsiveContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(BarChart // width={800}\n      // height={300}\n      , {\n        data: data,\n        margin: {\n          top: 30,\n          right: 15,\n          left: 5,\n          bottom: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"name\",\n        tickSize: true,\n        dy: \"25\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"fw\",\n        fill: \"#8884d8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"bw\",\n        fill: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return PrintReport;\n}(Component);\n\nexport default withRouter(PrintReport);","map":{"version":3,"sources":["/home/cdi_5/agri_thesis_front/src/components/PrintReport.js"],"names":["React","Component","withRouter","API","moment","gDp","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","qs","require","month","Array","PrintReport","urlSearch","parse","props","history","location","search","state","report","annual_report","pageState","start_date","end_date","apiRetrieve","st","id","match","params","console","log","getReport","then","response","setState","data","setTimeout","window","print","close","err","finally","isLoading","apiAverage","getReportAverage","fw1","avg_fw1","bw1","avg_bw1","fw2","avg_fw2","bw2","avg_bw2","fw3","avg_fw3","bw3","avg_bw3","fw4","avg_fw4","bw4","avg_bw4","fw5","avg_fw5","bw5","avg_bw5","fw6","avg_fw6","bw6","avg_bw6","fw7","avg_fw7","bw7","avg_bw7","fw8","avg_fw8","bw8","avg_bw8","apiAnnual","getAnnualReport","map","months","Month","pr","pathname","length","name","fw","bw","is_annual","fontSize","format","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom' \nimport * as API from '../services/API'\nimport moment from 'moment';\nimport { gDp } from '../helpers/helpers'\n\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\n\nconst qs = require('query-string');\nvar month = new Array();\nmonth[0] = \"January\";\nmonth[1] = \"February\";\nmonth[2] = \"March\";\nmonth[3] = \"April\";\nmonth[4] = \"May\";\nmonth[5] = \"June\";\nmonth[6] = \"July\";\nmonth[7] = \"August\";\nmonth[8] = \"September\";\nmonth[9] = \"October\";\nmonth[10] = \"November\";\nmonth[11] = \"December\";\n\nclass PrintReport extends Component {\n    urlSearch = qs.parse(this.props.history.location.search)\n    state={\n        report: [],\n        annual_report: [],\n        pageState: {\n            start_date: this.urlSearch.start_date,\n            end_date: this.urlSearch.end_date\n        },\n    }\n\n    apiRetrieve = () => {\n        const st = this.state\n        const {id} = this.props.match.params\n        const params = {\n            start_date: st.pageState.start_date || '',\n            end_date: st.pageState.end_date || ''\n        }\n        !st.pageState.start_date && delete params.start_date\n        !st.pageState.end_date && delete params.end_date\n        console.log('Hello')\n        API.getReport(params,id)\n        .then((response)=>{\n            this.setState({report: response.data},()=>{\n                setTimeout(()=>{\n                    window.print();\n                    setTimeout(window.close, 0);\n                }, 500)\n            })\n        }, err => {\n            \n        }).finally(()=> \n            this.setState({isLoading: false})\n        )\n    }\n\n    apiAverage = () => {\n        const st = this.state\n        const {id} = this.props.match.params\n        const params = {\n            start_date: st.pageState.start_date || '',\n            end_date: st.pageState.end_date || ''\n        }\n        !st.pageState.start_date && delete params.start_date\n        !st.pageState.end_date && delete params.end_date\n        API.getReportAverage(params,id)\n        .then((response)=>{\n            const report = [{...response.data,\n                fw1: response.data.avg_fw1, bw1: response.data.avg_bw1,\n                fw2: response.data.avg_fw2, bw2: response.data.avg_bw2,\n                fw3: response.data.avg_fw3, bw3: response.data.avg_bw3,\n                fw4: response.data.avg_fw4, bw4: response.data.avg_bw4,\n                fw5: response.data.avg_fw5, bw5: response.data.avg_bw5,\n                fw6: response.data.avg_fw6, bw6: response.data.avg_bw6,\n                fw7: response.data.avg_fw7, bw7: response.data.avg_bw7,\n                fw8: response.data.avg_fw8, bw8: response.data.avg_bw8,\n            }]\n            this.setState({report: report},()=>{\n                setTimeout(()=>{\n                    window.print();\n                    setTimeout(window.close, 0);\n                }, 500)\n            })\n        }, err => {\n            \n        }).finally(()=> \n            this.setState({isLoading: false})\n        )\n    }\n\n    apiAnnual = () => {\n        const st = this.state\n        this.setState({isLoading: true})\n        console.log('isAnnual')\n        API.getAnnualReport()\n        .then((response)=>{\n            const report = response.data.map((months)=> {return {...months, Month: month[months.Month-1]}})\n            \n            this.setState({annual_report: report})\n        }, err => {\n            // TOAST.pop({message: err.message, type: 'error'})\n        }).finally(()=> \n            this.setState({isLoading: false},()=>{\n                setTimeout(()=>{\n                    window.print();\n                    setTimeout(window.close, 0);\n                }, 500)\n            })\n        )\n    }\n\n    componentDidMount(){\n        const pr = this.props\n        const {id} = this.props.match.params\n        console.log(pr)\n        console.log(pr.location.pathname, pr.location.pathname==='/report/print/average')\n        if(pr.location.pathname==='/report/print/annual'){\n            this.apiAnnual()\n        } else if(pr.location.pathname==='/report/print/average'){\n            this.apiAverage()\n        } else {\n            this.apiRetrieve()\n        }\n    }\n\n    render() {\n        const st = this.state;\n        const data = st.report.length ? [\n            {\n                name: 1, fw: st.report[0].fw1, bw: st.report[0].bw1\n            },\n            {\n                name: 2, fw: st.report[0].fw2, bw: st.report[0].bw2\n            },\n            {\n                name: 3, fw: st.report[0].fw3, bw: st.report[0].bw3\n            },\n            {\n                name: 4, fw: st.report[0].fw4, bw: st.report[0].bw4\n            },\n            {\n                name: 5, fw: st.report[0].fw5, bw: st.report[0].bw5\n            },\n            {\n                name: 6, fw: st.report[0].fw6, bw: st.report[0].bw6\n            },\n            {\n                name: 7, fw: st.report[0].fw7, bw: st.report[0].bw7\n            },\n            {\n                name: 8, fw: st.report[0].fw8, bw: st.report[0].bw8\n            },\n        ] : ''\n        const is_annual = this.props.location.pathname==='/report/print/annual'\n        console.log(st.report, this.props, st)\n        return (\n            <div>\n                <div style={{}}>\n                    <strong style={{fontSize: '24px'}}><span style={{fontSize: '36px'}}>{st.report.length ? st.report[0].name : st.annual_report.length ? 'Annual' : ''}</span>&nbsp;{st.pageState.start_date ? `(${moment(st.pageState.start_date).format('MMMM DD YYYY')}` : ''} {st.pageState.end_date ? `- ${moment(st.pageState.end_date).format('MMMM DD YYYY')})` : ''}</strong>\n                </div>\n                {is_annual ? \n                    <ResponsiveContainer>\n                        <BarChart\n                            // width={800}\n                            // height={300}\n                            data={st.annual_report}\n                            margin={{\n                            top: 30, right: 15, left: 5, bottom: 15,\n                            }}\n                        >\n                            <XAxis dataKey=\"Month\" tickSize\n                                dy='25'/>\n                            <YAxis />\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            {/* <Tooltip /> */}\n                            <Legend />\n                            <Bar dataKey=\"avg_fw\" fill=\"#8884d8\"></Bar>\n                            <Bar dataKey=\"avg_bw\" fill=\"#82ca9d\"/>\n                        </BarChart>\n                    </ResponsiveContainer>:\n                    <ResponsiveContainer>\n                        <BarChart\n                            // width={800}\n                            // height={300}\n                            data={data}\n                            margin={{\n                            top: 30, right: 15, left: 5, bottom: 15,\n                            }}\n                        >\n                            <XAxis dataKey=\"name\" tickSize\n                                dy='25'/>\n                            <YAxis />\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            {/* <Tooltip /> */}\n                            <Legend />\n                            <Bar dataKey=\"fw\" fill=\"#8884d8\"></Bar>\n                            <Bar dataKey=\"bw\" fill=\"#82ca9d\"/>\n                        </BarChart>\n                    </ResponsiveContainer>\n                }\n            </div>\n        );\n    }\n}\n\nexport default withRouter(PrintReport);"]},"metadata":{},"sourceType":"module"}
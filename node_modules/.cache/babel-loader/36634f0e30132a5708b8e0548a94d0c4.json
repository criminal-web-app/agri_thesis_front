{"ast":null,"code":"import _objectSpread from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cdi_5/Downloads/agri_thesis_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cdi_5/Downloads/agri_thesis_front/src/modals/ConfirmModal.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport Modal from '../components/Modal';\nimport Toastr from '../helpers/Toastr.js';\n\nvar ConfirmModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ConfirmModal, _Component);\n\n  function ConfirmModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ConfirmModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ConfirmModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      toast: {\n        type: \"\",\n        message: \"\",\n        show: false\n      },\n      isConfirmClick: _this.props.isConfirmClick || false,\n      id: '',\n      ids: []\n    };\n\n    _this.onConfirm = function () {\n      var pr = _this.props;\n      var prids = pr.ids || [];\n      var _this$props = _this.props,\n          itemData = _this$props.itemData,\n          method = _this$props.method,\n          takeAction = _this$props.takeAction;\n\n      _this.setState({\n        isConfirmClick: true\n      }, function () {\n        if (typeof method === \"function\") {\n          method(itemData).then(function (response) {\n            _this.props.onDeleteItem();\n\n            _this.showToast(response.data[0].message, 'success');\n          }, function (err) {\n            _this.showToast(err[0].context, 'error');\n\n            _this.setState({\n              isConfirmClick: false\n            });\n\n            return;\n          });\n\n          _this.props.toggle();\n        }\n\n        if (typeof takeAction === \"function\") {\n          takeAction();\n        }\n      });\n    };\n\n    _this.showToast = function (message, type) {\n      _this.setState({\n        toast: {\n          type: type,\n          message: message,\n          show: true\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ConfirmModal, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      var that = this;\n      this.setState({\n        isConfirmClick: newProps.isConfirmClick || false,\n        error: newProps.error\n      }, function () {\n        setTimeout(function () {\n          if (!newProps.isConfirmClick) that.setState({\n            id: ''\n          });\n        }, 300);\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var pr = this.props;\n      if (!pr.disabledConfirmFocus && document.getElementById('confirmButton')) document.getElementById('confirmButton').focus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var st = this.state;\n      var pr = this.props;\n      var toast = this.state.toast;\n      var _this$props2 = this.props,\n          itemData = _this$props2.itemData,\n          isOpen = _this$props2.isOpen,\n          size = _this$props2.size,\n          modalTitle = _this$props2.modalTitle,\n          modalBody = _this$props2.modalBody,\n          _this$props2$enableTo = _this$props2.enableToaster,\n          enableToaster = _this$props2$enableTo === void 0 ? true : _this$props2$enableTo;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        size: size,\n        isOpen: isOpen,\n        toggle: this.props.toggle,\n        modalTitle: modalTitle,\n        modalBody: modalBody,\n        modalFooter: React.createElement(\"div\", {\n          style: {\n            height: \"38px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(Button, {\n          style: {\n            \"position\": \"absolute\",\n            \"left\": \"18px\"\n          },\n          onClick: this.props.toggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Cancel\"), React.createElement(Button, {\n          id: \"confirmButton\",\n          disabled: pr.disableConfirmButton || pr.isConfirmClick,\n          color: \"primary\",\n          style: {\n            \"position\": \"absolute\",\n            \"right\": \"18px\"\n          },\n          onClick: this.onConfirm,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, st.isConfirmClick || pr.isConfirmClick ? 'Loading...' : 'Confirm')),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), enableToaster && React.createElement(Toastr, {\n        type: toast.type,\n        visible: toast.show,\n        message: toast.message,\n        onClose: function onClose() {\n          _this2.setState(function (oldState) {\n            return {\n              toast: _objectSpread({}, oldState.toast, {\n                show: false\n              })\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ConfirmModal;\n}(Component);\n\nexport default ConfirmModal;","map":{"version":3,"sources":["/home/cdi_5/Downloads/agri_thesis_front/src/modals/ConfirmModal.js"],"names":["React","Component","Button","Modal","Toastr","ConfirmModal","state","toast","type","message","show","isConfirmClick","props","id","ids","onConfirm","pr","prids","itemData","method","takeAction","setState","then","response","onDeleteItem","showToast","data","err","context","toggle","newProps","that","error","setTimeout","disabledConfirmFocus","document","getElementById","focus","st","isOpen","size","modalTitle","modalBody","enableToaster","height","disableConfirmButton","oldState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\n\nimport Modal from '../components/Modal';\nimport Toastr from '../helpers/Toastr.js'\n\nclass ConfirmModal extends Component {\n\n    state = {\n        toast: {\n            type: \"\",\n            message: \"\",\n            show: false\n        },\n        isConfirmClick: this.props.isConfirmClick || false,\n        id: '',\n        ids: []\n    }\n\n    onConfirm = () => {\n        const pr = this.props\n        let prids = pr.ids || []\n        const { itemData, method, takeAction} = this.props;\n        this.setState({isConfirmClick: true }, () => {\n            if (typeof method=== \"function\") {\n                method(itemData)\n                    .then( response => {\n                        this.props.onDeleteItem() \n                        this.showToast(response.data[0].message,'success')                                      \n                    }, err=> {\n                        this.showToast(err[0].context,'error')\n                        this.setState({isConfirmClick: false})\n                        return\n                    })\n                this.props.toggle()               \n            }\n           \n            if (typeof takeAction === \"function\") {\n                takeAction()\n            }  \n        })\n\n    }\n\n    showToast = (message, type) => {\n        this.setState({\n            toast: {\n                type: type,\n                message: message,\n                show: true\n            }\n        }) \n    }\n\n    componentWillReceiveProps(newProps) {\n        const that = this\n        this.setState({\n            isConfirmClick: ( newProps.isConfirmClick ) || false,\n            error: newProps.error,\n            \n        },()=>{\n            setTimeout(function(){\n                if (!newProps.isConfirmClick)\n                that.setState({id: ''})\n            }, 300) \n        })\n    } \n\n    componentDidUpdate() {\n        const pr = this.props\n        \n        if (!pr.disabledConfirmFocus && document.getElementById('confirmButton'))\n            document.getElementById('confirmButton').focus()\n    }\n\n    render() {\n        const st = this.state\n        const pr = this.props\n        const { toast } = this.state     \n        const { itemData, isOpen, size, modalTitle, modalBody, enableToaster = true} = this.props\n        return (\n            <div>\n                <Modal\n                    size={size}\n                    isOpen={isOpen}\n                    toggle={this.props.toggle}\n                    modalTitle={modalTitle}\n                    modalBody={modalBody}\n                    modalFooter={\n                        (\n                            <div style={\n                                {\n                                    height: \"38px\"\n                                }\n                            }>\n                                <Button \n                                    style={\n                                        {\n                                            \"position\": \"absolute\",\n                                            \"left\": \"18px\"\n                                        }\n                                    }\n                                    onClick={this.props.toggle}\n                                >\n                                    Cancel\n                                </Button>\n                                <Button \n                                    id=\"confirmButton\"\n                                    disabled={ (pr.disableConfirmButton ||  pr.isConfirmClick) }\n                                    color=\"primary\"\n                                    style={\n                                        {\n                                            \"position\": \"absolute\",\n                                            \"right\": \"18px\"\n                                        }\n                                    }\n                                    onClick={this.onConfirm}\n                                >\n                                    {st.isConfirmClick || pr.isConfirmClick ? 'Loading...' :  'Confirm'}\n                                </Button>\n                            </div>\n                        )\n                    }>\n                </Modal>\n                { enableToaster && (\n                    <Toastr \n                        type={toast.type}\n                        visible={toast.show}\n                        message={toast.message}\n                        onClose={\n                            () => {\n                                this.setState(oldState=>({\n                                    toast: {\n                                        ...oldState.toast,\n                                        show: false\n                                    }\n                                }))\n                            }\n                        } \n                    />    \n                )}\n\n            </div>\n        );\n    }\n}\n\nexport default ConfirmModal;"]},"metadata":{},"sourceType":"module"}